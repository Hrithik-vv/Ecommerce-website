<%- include("../partials/admin/adminHeader.ejs") %>

    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        .content-main {
            background-color: #f5f7fa;
            color: #333;
            padding: 20px;
            margin-left: 330px;
            margin-top: 80px;
        }
        
        .dashboard {
            max-width: 1200px;
            margin: 0 auto;
        }
        
        .dashboard-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }
        
        .time-filters {
            display: flex;
            gap: 10px;
        }
        
        .time-filter {
            padding: 8px 16px;
            background-color: #fff;
            border: 1px solid #ddd;
            border-radius: 4px;
            cursor: pointer;
            transition: all 0.3s;
        }
        
        .time-filter.active {
            background-color: #4a6cf7;
            color: #fff;
            border-color: #4a6cf7;
        }
        
        .chart-container {
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
            padding: 20px;
            margin-bottom: 20px;
        }

        .stats-container {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 20px;
        }

        .stat-card {
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
            padding: 20px;
            display: flex;
            flex-direction: column;
        }
        
        .stat-card h3 {
            font-size: 16px;
            color: #666;
            margin-bottom: 10px;
        }
        
        .stat-card p {
            font-size: 24px;
            font-weight: bold;
            color: #333;
        }
        
        .top-lists-container {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
        }
        
        .top-list {
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
            padding: 20px;
        }
        
        .top-list h2 {
            font-size: 18px;
            margin-bottom: 15px;
            color: #333;
        }
        
        .list-item {
            display: flex;
            justify-content: space-between;
            padding: 10px 0;
            border-bottom: 1px solid #eee;
        }
        
        .list-item:last-child {
            border-bottom: none;
        }
        
        .item-name {
            font-weight: 500;
        }
        
        .item-value {
            font-weight: bold;
            color: #4a6cf7;
        }
        
        .progress-bar {
            height: 6px;
            background-color: #eee;
            border-radius: 3px;
            margin-top: 5px;
            overflow: hidden;
        }
        
        .progress {
            height: 100%;
            background-color: #4a6cf7;
        }

        .item-details {
            font-size: 0.8rem;
            color: #666;
            margin: 4px 0;
            display: flex;
            justify-content: space-between;
        }

        .sales-count {
            color: #4a6cf7;
            font-weight: 500;
        }

        .sales-percentage {
            color: #666;
        }

        .item-stats {
            text-align: right;
        }

        .item-count {
            font-size: 0.8rem;
            color: #666;
            margin-top: 4px;
        }

        @media (max-width: 768px) {
            .content-main {
                margin-left: 0;
            }

            .stats-container {
                grid-template-columns: 1fr;
            }

            .top-lists-container {
                grid-template-columns: 1fr;
            }
        }
    </style>

    <section class="content-main">
        <div class="dashboard">
            <div class="dashboard-header">
                <h1>Sales Dashboard</h1>
                <div class="time-filters">
                    <div class="time-filter" onclick="changeTimeFilter('weekly')">Weekly</div>
                    <div class="time-filter active" onclick="changeTimeFilter('monthly')">Monthly</div>
                    <div class="time-filter" onclick="changeTimeFilter('yearly')">Yearly</div>
                </div>
            </div>
            
            <div class="chart-container">
                <canvas id="salesChart"></canvas>
        </div>

            <div class="stats-container">
        <div class="stat-card">
                    <h3>Total Orders</h3>
                    <p id="total-orders">0</p>
        </div>
        <div class="stat-card">
                    <h3>Total Revenue</h3>
                    <p id="total-revenue">₹0</p>
        </div>
        <div class="stat-card">
                    <h3>Total Customers</h3>
                    <p id="total-customers">0</p>
        </div>
        <div class="stat-card">
                    <h3>Total Products</h3>
                    <p id="total-products">0</p>
                </div>
        </div>
            
            <div class="top-lists-container">
                <div class="top-list">
                    <h2>Best Selling Products</h2>
                    <div id="top-products-list">
                        <!-- Will be populated by JavaScript -->
        </div>
    </div>
                
                <div class="top-list">
                    <h2>Best Selling Categories</h2>
                    <div id="top-categories-list">
                        <!-- Will be populated by JavaScript -->
                    </div>
                </div>
            </div>
        </div>
    </section>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.9.1/chart.min.js"></script>
        <script>
            let salesChart = null;
            let currentTimeFilter = 'monthly';

            // Move all initialization code inside this function
            function initializeDashboard() {
                if (!document.getElementById('salesChart')) {
                    console.error('Sales chart canvas not found');
                    return;
                }

                // Rest of your initialization code...
                fetchDashboardData('monthly');
            }

            // Wait for DOM to be fully loaded
            if (document.readyState === 'loading') {
                document.addEventListener('DOMContentLoaded', initializeDashboard);
            } else {
                initializeDashboard();
            }

            async function fetchDashboardData(period) {
                try {
                    // Show loading state
                    const elements = ['total-orders', 'total-revenue', 'total-customers', 'total-products'];
                    elements.forEach(id => {
                        const element = document.getElementById(id);
                        if (element) element.textContent = 'Loading...';
                    });
                    
                    console.log('Fetching data for period:', period);
                    const response = await fetch(`/admin/dashboard-data/${period}`, {
                        headers: {
                            'Accept': 'application/json'
                        }
                    });

                    if (!response.ok) {
                        const text = await response.text();
                        console.error('Response not OK:', text);
                        throw new Error(`HTTP error! status: ${response.status}`);
                    }

                    const data = await response.json();
                    console.log('Received data:', data);

                    if (data.success) {
                        updateChart(data.data.labels, data.data.salesData);
                        
                        // Update statistics safely
                        elements.forEach(id => {
                            const element = document.getElementById(id);
                            if (!element) return;
                            
                            switch(id) {
                                case 'total-orders':
                                    element.textContent = data.data.stats.totalOrders.toLocaleString();
                                    break;
                                case 'total-revenue':
                                    element.textContent = '₹' + data.data.stats.totalRevenue.toLocaleString();
                                    break;
                                case 'total-customers':
                                    element.textContent = data.data.stats.totalCustomers.toLocaleString();
                                    break;
                                case 'total-products':
                                    element.textContent = data.data.stats.totalProducts.toLocaleString();
                                    break;
                            }
                        });
                        
                        // Update lists safely
                        updateProductsList(data.data.topProducts);
                        updateCategoriesList(data.data.topCategories);
                    }
                } catch (error) {
                    console.error('Error:', error);
                    // Show error state
                    const elements = ['total-orders', 'total-revenue', 'total-customers', 'total-products'];
                    elements.forEach(id => {
                        const element = document.getElementById(id);
                        if (element) element.textContent = 'Error loading data';
                    });
                }
            }

            function updateProductsList(products) {
                const list = document.getElementById('top-products-list');
                if (!list) return;
                
                if (!products || products.length === 0) {
                    list.innerHTML = '<div class="list-item">No products data available</div>';
                    return;
                }

                list.innerHTML = products.map(product => `
                    <div class="list-item">
                        <div>
                            <div class="item-name">${product.name}</div>
                            <div class="item-details">
                                <span class="sales-count">Sold ${product.quantity} times</span>
                               
                            </div>
                            <div class="progress-bar">
                                <div class="progress" style="width: ${product.salesPercentage}%"></div>
                            </div>
                        </div>
                        <div class="item-stats">
                            <div class="item-value">₹${product.revenue.toLocaleString()}</div>
                            <div class="item-count">${product.salesCount} orders</div>
                        </div>
                    </div>
                `).join('');
            }

            function updateCategoriesList(categories) {
                const list = document.getElementById('top-categories-list');
                if (!list) return;
                
                if (!categories || categories.length === 0) {
                    list.innerHTML = '<div class="list-item">No categories data available</div>';
                    return;
                }

                list.innerHTML = categories.map(category => `
                    <div class="list-item">
                        <div>
                            <div class="item-name">${category.name}</div>
                            <div class="item-details">
                                <span class="sales-count">Sold ${category.quantity} items</span>
                               
                            </div>
                            <div class="progress-bar">
                                <div class="progress" style="width: ${category.salesPercentage}%"></div>
                            </div>
                        </div>
                        <div class="item-stats">
                            <div class="item-value">₹${category.revenue.toLocaleString()}</div>
                            <div class="item-count">${category.salesCount} orders</div>
                        </div>
                    </div>
                `).join('');
            }

            function updateChart(labels, data) {
                const ctx = document.getElementById('salesChart');
                if (!ctx) return;

                if (salesChart) {
                    salesChart.destroy();
                }

                salesChart = new Chart(ctx.getContext('2d'), {
                    type: 'line',
                    data: {
                        labels: labels,
                        datasets: [{
                            label: 'Sales',
                            data: data,
                            backgroundColor: 'rgba(74, 108, 247, 0.1)',
                            borderColor: 'rgba(74, 108, 247, 1)',
                            borderWidth: 2,
                            pointBackgroundColor: 'rgba(74, 108, 247, 1)',
                            pointRadius: 4,
                            tension: 0.3,
                            fill: true
                        }]
                    },
                    options: {
                        responsive: true,
                        plugins: {
                            legend: {
                                display: false
                            },
                            tooltip: {
                                mode: 'index',
                                intersect: false,
                                callbacks: {
                                    label: function(context) {
                                        return `Sales: ₹${context.raw.toLocaleString()}`;
                                    }
                                }
                            }
                        },
                        scales: {
                            y: {
                                beginAtZero: true,
                                ticks: {
                                    callback: function(value) {
                                        return '₹' + value.toLocaleString();
                                    }
                                }
                            }
                        }
                    }
                });
            }

            function changeTimeFilter(filter) {
                if (!filter) return;
                
                currentTimeFilter = filter;
                fetchDashboardData(filter);
                
                document.querySelectorAll('.time-filter').forEach(elem => {
                    elem.classList.remove('active');
                });
                
                const activeFilter = document.querySelector(`.time-filter[onclick="changeTimeFilter('${filter}')"]`);
                if (activeFilter) {
                    activeFilter.classList.add('active');
                }
            }
        </script>

        <%- include("../partials/admin/adminFooter.ejs") %>
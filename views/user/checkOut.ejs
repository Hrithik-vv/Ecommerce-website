<!DOCTYPE html>
<html lang="zxx">
<style>
    /* Modern Reset and Base Styles */
    :root {
        --primary-color: #2c3e50;
        --secondary-color: #3498db;
        --accent-color: #e74c3c;
        --background-color: #f8f9fa;
        --text-color: #2c3e50;
        --border-radius: 12px;
        --box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    /* Responsive Container */
    .container {
        width: 100%;
        padding-right: 15px;
        padding-left: 15px;
        margin-right: auto;
        margin-left: auto;
        max-width: 1200px;
    }

    /* Header Redesign */
    .checkout-header {
        background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
        padding: 15px 0;
        box-shadow: var(--box-shadow);
        margin-bottom: 10px;
        width: 100%;
        position: relative;
    }

    .logo {
        font-size: clamp(1.5rem, 4vw, 2.5rem);
        font-weight: 800;
        background: linear-gradient(to right, #fff, #e0e0e0);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        text-align: center;
    }

    /* Breadcrumb Redesign */
    .wishlist-breadcrumb {
        background: white;
        padding: 10px 15px;
        border-radius: var(--border-radius);
        margin: 10px 15px;
        font-size: clamp(0.8rem, 2vw, 1rem);
        display: flex;
        flex-wrap: wrap;
        gap: 0.5rem;
        align-items: center;
    }

    .wishlist-breadcrumb a {
        color: var(--secondary-color);
        text-decoration: none;
        transition: color 0.3s ease;
    }

    .wishlist-breadcrumb a:hover {
        color: var(--accent-color);
    }

    /* Checkout Section Spacing */
    .checkout.spad {
        padding-top: 20px;
        padding-bottom: 50px;
    }

    /* Checkout Form Container */
    .checkout__form {
        background: white;
        border-radius: var(--border-radius);
        box-shadow: var(--box-shadow);
        padding: clamp(15px, 3vw, 25px);
        margin-top: 15px;
    }

    /* Coupon Section Redesign */
    .coupon-application {
        display: flex;
        flex-direction: column;
        gap: 10px;
        margin: 10px 0 20px 0;
    }

    #couponCode {
        width: 100%;
        max-width: 300px;
        padding: 8px 12px;
        border: 1px solid #ddd;
        border-radius: 6px;
    }

    .coupon-item {
        padding: 12px;
        border: 1px dashed #ddd;
        border-radius: var(--border-radius);
        margin-bottom: 10px;
        transition: all 0.3s ease;
    }

    .coupon-details {
        display: flex;
        flex-wrap: wrap;
        gap: 10px;
        font-size: 0.9em;
    }

    /* Address Section Redesign */
    .address-option {
        padding: clamp(12px, 2vw, 20px);
        margin-bottom: 15px;
        border: 2px solid #e1e1e1;
        border-radius: var(--border-radius);
        transition: all 0.3s ease;
    }

    .address-header {
        display: flex;
        flex-wrap: wrap;
        gap: 10px;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 10px;
    }

    .address-type {
        padding: 4px 12px;
        border-radius: 15px;
        font-size: clamp(0.7rem, 1.5vw, 0.9rem);
    }

    /* Order Summary Redesign */
    .checkout__order {
        background: white;
        border-radius: var(--border-radius);
        padding: clamp(15px, 3vw, 30px);
        margin-top: clamp(15px, 3vw, 30px);
        box-shadow: var(--box-shadow);
    }

    .order__title {
        color: var(--primary-color);
        font-size: clamp(1.2rem, 3vw, 1.8rem);
        margin-bottom: 25px;
        padding-bottom: 15px;
        border-bottom: 2px solid var(--secondary-color);
    }

    /* Product List Redesign */
    .checkout_total_products li {
        display: flex;
        flex-wrap: wrap;
        gap: 10px;
        justify-content: space-between;
        padding: 10px 0;
        border-bottom: 1px solid #eee;
    }

    .product-details {
        flex: 1;
        min-width: 200px;
        display: flex;
        gap: 8px;
    }

    .variant-details {
        font-size: clamp(0.8rem, 1.5vw, 0.9rem);
    }

    /* Payment Options Redesign */
    .payment-options {
        margin: 20px 0;
    }

    .payment-options label {
        display: block;
        padding: clamp(10px, 2vw, 15px);
        margin: 10px 0;
        border-radius: var(--border-radius);
        background: #f8f9fa;
        transition: all 0.3s ease;
    }

    .payment-options label:hover {
        background: #f0f0f0;
    }

    /* Button Redesign */
    .site-btn {
        width: 100%;
        padding: clamp(10px, 2vw, 15px);
        font-size: clamp(0.9rem, 2vw, 1rem);
        background: var(--primary-color);
        color: white;
        border: none;
        border-radius: var(--border-radius);
        transition: all 0.3s ease;
    }

    .site-btn:hover {
        background: var(--secondary-color);
        transform: translateY(-2px);
    }

    /* Responsive Adjustments */
    @media (max-width: 1200px) {
        .container {
            max-width: 95%;
        }
    }

    @media (max-width: 991px) {
        .checkout__form {
            margin: 15px;
        }
        
        .checkout__order {
            margin: 15px;
        }
        
        .product-details {
            min-width: 150px;
        }
    }

    @media (max-width: 768px) {
        .coupon-details {
            flex-direction: column;
        }
        
        .coupon-details span {
            padding-right: 0;
            border-right: none;
            padding-bottom: 5px;
            border-bottom: 1px solid #ddd;
        }
        
        .address-header {
            flex-direction: column;
            align-items: flex-start;
        }
        
        .product-details {
            flex-direction: column;
            gap: 5px;
        }
        
        .checkout__total__all li {
            font-size: 0.9rem;
        }
    }

    @media (max-width: 576px) {
        .wishlist-breadcrumb {
            margin: 10px;
            font-size: 0.8rem;
        }
        
        .checkout__form {
            padding: 12px;
        }
        
        .address-type {
            font-size: 0.7rem;
            padding: 3px 8px;
        }
        
        .coupon-application {
            flex-direction: column;
        }
        
        #couponCode {
            max-width: 100%;
        }
        
        .product-details {
            min-width: 100%;
        }
    }

    /* Touch-friendly elements */
    @media (hover: none) {
        .site-btn,
        .coupon-item,
        .address-option {
            cursor: pointer;
            -webkit-tap-highlight-color: transparent;
        }
    }

    /* Accessibility Improvements */
    .site-btn:focus,
    .coupon-item:focus,
    .address-option:focus {
        outline: 2px solid var(--secondary-color);
        outline-offset: 2px;
    }

    /* Maintain existing functionality classes */
    .disabled-payment-option {
        opacity: 0.6;
        cursor: not-allowed;
        background: #f5f5f5;
    }

    .disabled-payment-option input {
        cursor: not-allowed;
    }

    .text-danger {
        color: #dc3545;
        font-size: 0.875rem;
        margin-top: 0.25rem;
    }
</style>
<head>
    <meta charset="UTF-8">
    <meta name="description" content="Male_Fashion Template">
    <meta name="keywords" content="Male_Fashion, unica, creative, html">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Oxyboo | Checkout</title>

    <!-- Google Font -->
    <link href="https://fonts.googleapis.com/css2?family=Nunito+Sans:wght@300;400;600;700;800;900&display=swap"
        rel="stylesheet">

    <!-- Css Styles -->
    <link rel="stylesheet" href="css/bootstrap.min.css" type="text/css">
    <link rel="stylesheet" href="css/font-awesome.min.css" type="text/css">
    <link rel="stylesheet" href="css/elegant-icons.css" type="text/css">
    <link rel="stylesheet" href="css/magnific-popup.css" type="text/css">
    <link rel="stylesheet" href="css/nice-select.css" type="text/css">
    <link rel="stylesheet" href="css/owl.carousel.min.css" type="text/css">
    <link rel="stylesheet" href="css/slicknav.min.css" type="text/css">
    <link rel="stylesheet" href="css/style.css" type="text/css">
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <style>
        .checkout-header {
            background-color: #000;
            padding: 20px;
            width: 100%;
            display: flex;
            justify-content: center;
        }

        .logo {
            color: #fff;
            font-size: 35px;
            font-weight: bold;
            font-family: Arial, sans-serif;
        }

        .wishlist-breadcrumb {
            display: flex;
            margin-left: 200px;
            gap: 0.5rem;
            color: rgba(38, 31, 31, 0.8);
            margin-top: 0.5rem;
        }

        .wishlist-breadcrumb a {
            color: rgb(0, 0, 0);
            text-decoration: none;

        }

        .checkout__order__products {
            display: flex;
            justify-content: space-between;
            font-weight: bold;
            margin-bottom: 15px;
        }

        .checkout_total_products {
            list-style: none;
            padding: 0;
            margin-bottom: 20px;
        }

        .checkout_total_products li {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px 0;
            border-bottom: 1px solid #eee;
        }

        .checkout_total_products li:last-child {
            border-bottom: none;
        }

        .checkout_total_products li .product-details {
            display: flex;
            align-items: center;
        }

        .checkout_total_products li .product-details .product-number {
            margin-right: 10px;
            color: #888;
        }

        .checkout_total_products li .product-price {
            display: flex;
            flex-direction: column;
            align-items: flex-end;
        }

        .checkout_total_products li .product-price .quantity {
            font-size: 0.8em;
            color: #666;
            margin-bottom: 5px;
        }

        .existing-addresses {
            margin-bottom: 30px;
            padding: 20px;
            border-radius: 8px;
            background: #fff;
        }

        .address-option {
            margin-bottom: 15px;
            padding: 20px;
            border: 2px solid #e1e1e1;
            border-radius: 8px;
            transition: all 0.3s ease;
            cursor: pointer;
            background: #fff;
        }

        .address-option:hover {
            border-color: #000;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        }

        .address-option.selected-address {
            border-color: #000;
            background-color: #f8f9fa;
        }

        .address-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 10px;
        }

        .address-type {
            padding: 4px 12px;
            border-radius: 15px;
            background: #000;
            color: #fff;
            font-size: 12px;
            text-transform: uppercase;
        }

        .address-content {
            color: #666;
            line-height: 1.6;
            margin: 0;
        }

        .no-addresses {
            text-align: center;
            padding: 30px;
            background: #f8f9fa;
            border-radius: 8px;
        }

        .no-addresses p {
            margin-bottom: 20px;
            color: #666;
        }

        .payment-options {
            display: flex;
            flex-direction: column;
            gap: 8px;
        }

        #applyCoupon {
            background-color: black;
            color: white;
            border: none;
        }

        #applyCoupon:hover {
            background-color: #333;
            /* Slightly lighter black for hover effect */
        }

        .available-coupons {
            margin-top: 20px;
            padding: 15px;
            background: #f8f9fa;
            border-radius: 8px;
        }

        .available-coupons h6 {
            margin-bottom: 15px;
            color: #333;
            font-weight: 600;
        }

        .coupon-list {
            display: flex;
            flex-direction: column;
            gap: 10px;
        }

        .coupon-item {
            padding: 12px;
            border: 1px dashed #ddd;
            border-radius: 6px;
            background: white;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .coupon-item:hover {
            border-color: #007bff;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }

        .coupon-code {
            font-weight: bold;
            color: #007bff;
            margin-bottom: 5px;
        }

        .coupon-details {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            font-size: 0.9em;
            color: #666;
        }

        .coupon-details span {
            padding-right: 10px;
            border-right: 1px solid #ddd;
        }

        .coupon-details span:last-child {
            border-right: none;
        }

        .no-coupons {
            color: #666;
            font-style: italic;
        }

        .variant-details {
            font-size: 0.9em;
            color: #666;
            margin-left: 8px;
        }

        .coupon-application {
            display: flex;
            align-items: center;
            gap: 10px;
            margin-bottom: 20px;
        }

        #couponCode {
            flex: 1;
            max-width: 250px;
        }

        #removeCoupon {
            padding: 8px 15px;
            white-space: nowrap;
        }

        #couponMessage {
            width: 100%;
            margin-top: 8px;
        }
    </style>
</head>
<header class="checkout-header">
    <div class="logo">Oxyboo</div>
</header>


<!-- breadcrumb -->
<div class="wishlist-breadcrumb">
    <a href="/">Home</a>
    <span>›</span>
    <a href="/shop">Shop</a>
    <span>›</span>
    <a href="/shopping-cart">Cart</a>
    <span>›</span>
    <span>Checkout</span>
</div>
<div class="container">
    
  </div>
  

<body>
 
    <!-- Checkout Section -->
    <section class="checkout spad">
        <div class="container">

            <div class="checkout__form">
                <form method="post" action="/checkout">
                    <div class="row">
                        <div class="col-lg-8 col-md-6">
                            <div class="coupon-application mt-3">
                                <div class="d-flex align-items-center w-100">
                                    <input type="text" id="couponCode" placeholder="Enter coupon code"
                                        class="form-control" readonly>
                                    <button type="button" id="removeCoupon" class="btn btn-danger ml-2"
                                        style="display: none;">Remove</button>
                                </div>
                                <div id="couponMessage" class="mt-2"></div>
                            </div>
                            <div class="available-coupons mt-3">
                                <h6>Available Coupons</h6>
                                <div class="coupon-list">
                                    <% if (typeof coupons !=='undefined' && coupons.length> 0) { %>

                                        <% coupons.forEach(coupon=> { %>
                                            <div class="coupon-item" data-code="<%= coupon.name %>">
                                                <div class="coupon-code">
                                                    <%= coupon.name %>
                                                </div>
                                                <div class="coupon-details">
                                                    <span class="discount">Save ₹<%= coupon.offerPrice %></span>
                                                    <span class="min-purchase">Min. Purchase: ₹<%= coupon.minimumPrice
                                                            %></span>
                                                    <span class="expiry">Valid till: <%= new
                                                            Date(coupon.expireOn).toLocaleDateString() %></span>
                                                </div>
                                            </div>
                                            <% }) %>

                                                <% } else { %>
                                                    <p class="no-coupons">No coupons available at the
                                                        moment</p>
                                                    <% } %>
                                </div>
                                
                            </div>
                           
                            <h6 class="checkout__title">Billing Details</h6>
                            <% if (addresses && addresses.length> 0) { %>
                                <div class="existing-addresses">
                                    <div class = "address-btn" >
                                       
                                      </div>
                                    <h6>Select Delivery Address</h6>
                                    <div class="accordion" id="addressAccordion">
                                        <% addresses.forEach((addr, index)=> { %>
                                            <div class="address-option" data-id="<%= addr._id %>"
                                                data-index="<%= index %>">
                                                <div class="address-details">
                                                    <div class="address-header">
                                                        <strong>
                                                            <%= addr.name %>
                                                        </strong>
                                                        <span class="address-type">
                                                            <%= addr.addressType %>
                                                        </span>
                                                    </div>
                                                    <p class="address-content">
                                                        <%= addr.landMark %><br>
                                                            <%= addr.city %>, <%= addr.state %> - <%= addr.pincode %>
                                                                        <br>
                                                                        Phone: <%= addr.phone %><br>
                                                                            Alt Phone: <%= addr.altPhone %>
                                                    </p>
                                                </div>
                                            </div>
                                            <% }) %>
                                    </div>
                                    <a href="/addAddress" class="site-btn mt-4">
                                        Add New Address
                                    </a>
                                    <input type="hidden" id="selectedAddressId" name="selectedAddressId">
                                </div>
                                <% } else { %>
                                    <div class="no-addresses">
                                        <p>No addresses found. Please add a new address.</p>
                                        <a href="/addAddress" class="site-btn">
                                            Add New Address
                                        </a>
                                    </div>
                                    <% } %>
                        </div>
                        <div class="col-lg-4 col-md-6">
                            <div class="checkout__order">
                                <h4 class="order__title">Your Order</h4>
                                <div class="checkout__order__products">Product <span>Total</span></div>
                                <ul class="checkout_total_products">
                                    <% cartItems.forEach((item, index)=> { %>
                                        <li data-product-id="<%= item.productId._id %>"
                                            data-variant-id="<%= item.variantId %>"
                                            data-quantity="<%= item.quantity %>">
                                            <div class="product-details">

                                                <span class="product-number">
                                                    <%= index + 1 %>.
                                                </span>
                                                <div>
                                                    <%= item.productId.productName %>

                                                        <div class="variant-details">
                                                            <input type="text" name="color" value="<%= item.color %>"
                                                                hidden>
                                                            <input type="text" name="size" value="<%= item.size %>"
                                                                hidden>
                                                            Color: <%= item.color %> | Size: <%= item.size %>
                                                        </div>

                                                </div>
                                            </div>
                                            <div class="product-price">
                                                <span class="quantity">Qty: <%= item.quantity %></span>
                                                ₹<%= item.totalPrice.toFixed(2) %>
                                            </div>
                                        </li>
                                        <% }) %>
                                </ul>
                                <ul class="checkout__total__all">
                                    <li>Subtotal <span>₹<%= total.toFixed(2) %></span></li>
                                    <li>Delivery Charge <span>₹40.00</span></li>
                                    <li class="coupon-discount" style="display: none;">
                                        Discount <span id="discountAmount">₹0.00</span>
                                    </li>
                                    <li>Total <span id="totalAmount">₹<%= (total + 40).toFixed(2) %></span>
                                    </li>
                                </ul>
                                <input type="hidden" name="couponCode" id="couponCodeInput">
                                <div class="payment-options">
                                    <label id="codLabel" class="<%= (total + 40) > 1000 ? 'disabled-payment-option' : '' %>">
                                        <input type="radio" name="payment" value="cod" required 
                                               <%= (total + 40) > 1000 ? 'disabled' : '' %>>
                                        Cash on Delivery
                                        <% if ((total + 40) > 1000) { %>
                                            <small class="text-danger d-block">Not available for orders above ₹1,000</small>
                                        <% } %>
                                    </label>
                                    <label>
                                        <input type="radio" name="payment" value="razorpay" required 
                                               <%= (total + 40) > 1000 ? 'checked' : '' %>>
                                        Razorpay
                                    </label>
                                </div>

                                <button type="submit" class="site-btn">PLACE ORDER</button>
                            </div>
                        </div>
                    </div>
                    <input type="hidden" name="products" id="productsData">

                </form>
            </div>
        </div>
    </section>


    <script src="js/jquery-3.3.1.min.js"></script>
    <script src="js/bootstrap.min.js"></script>
    <script src="js/jquery.nice-select.min.js"></script>
    <script src="js/jquery.nicescroll.min.js"></script>
    <script src="js/jquery.magnific-popup.min.js"></script>
    <script src="js/jquery.countdown.min.js"></script>
    <script src="js/jquery.slicknav.js"></script>
    <script src="js/mixitup.min.js"></script>
    <script src="js/owl.carousel.min.js"></script>
    <script src="js/main.js"></script>
    <script src="js/jquery-3.3.1.min.js"></script>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const addressOptions = document.querySelectorAll('.address-option');
            const orderTotal = parseFloat('<%= total %>') + 40; // Add delivery charge to total

            // Check if order total is above 1000 and handle payment options
            if (orderTotal > 1000) {
                const codInput = document.querySelector('input[value="cod"]');
                const razorpayInput = document.querySelector('input[value="razorpay"]');
                if (codInput) codInput.disabled = true;
                if (razorpayInput) razorpayInput.checked = true;
            }

            addressOptions.forEach(option => {
                option.addEventListener('click', function () {
                    addressOptions.forEach(opt => opt.classList.remove('selected-address'));
                    this.classList.add('selected-address');
                    document.getElementById('selectedAddressId').value = this.dataset.id;
                });
            });

            document.querySelector('form').addEventListener('submit', function (e) {
                const selectedAddress = document.querySelector('.selected-address');
                if (!selectedAddress) {
                    e.preventDefault();
                    alert('Please select an address or add a new one');
                    return;
                }

                // Collect address information
                const addressId = selectedAddress.dataset.id;
                const addressIndex = selectedAddress.dataset.index;

                // Collect product information
                const products = Array.from(document.querySelectorAll('.checkout_total_products li')).map(li => ({
                    productId: li.dataset.productId,
                    variantId: li.dataset.variantId,
                    quantity: parseInt(li.dataset.quantity),
                    color: li.querySelector('input[name="color"]').value,
                    size: li.querySelector('input[name="size"]').value
                }));

                // Log the data to console
                console.log({
                    selectedAddress: {
                        id: addressId,
                        index: addressIndex
                    },
                    products: products
                });

                // Optional: Add the products data to form submission
                document.getElementById('productsData').value = JSON.stringify(products);
            });

            // Coupon item click handlers
            document.querySelectorAll('.coupon-item').forEach(item => {
                item.addEventListener('click', function () {
                    const code = this.dataset.code;
                    handleCouponApplication(code);
                });
            });

            // Remove coupon button handler
            const removeCouponBtn = document.getElementById('removeCoupon');
            if (removeCouponBtn) {
                removeCouponBtn.addEventListener('click', () => {
                    resetCouponUI();
                });
            }

            function handleCouponApplication(code) {
                const subtotal = parseFloat(document.querySelector('.checkout__total__all li:first-child span').textContent.replace('₹', ''));

                if (!subtotal) {
                    showCouponMessage('Unable to determine cart total', 'error');
                    return;
                }

                fetch('/apply-coupon', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        couponCode: code,
                        total: subtotal
                    }),
                    credentials: 'same-origin'
                })
                    .then(response => {
                        if (response.headers.get('content-type').includes('text/html')) {
                            return response.text().then(html => ({ html }));
                        }
                        return response.json();
                    })
                    .then(result => {
                        if (result.html) {
                            document.getElementById('couponMessage').innerHTML = result.html;
                        } else if (result.success) {
                            updateCouponUI(code, result);
                            showCouponMessage(result.message, 'success');
                        } else {
                            resetCouponUI();
                            showCouponMessage(result.message, 'error');
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        showCouponMessage('Failed to apply coupon', 'error');
                        resetCouponUI();
                    });
            }

            function updateCouponUI(code, result) {
                document.getElementById('couponCode').value = code;
                document.getElementById('couponCodeInput').value = code;
                document.querySelector('.coupon-discount').style.display = 'block';
                document.getElementById('discountAmount').textContent = `₹${result.discount.toFixed(2)}`;
                document.getElementById('totalAmount').textContent = `₹${(result.newTotal + 40).toFixed(2)}`;
                document.getElementById('removeCoupon').style.display = 'block';

                document.querySelectorAll('.coupon-item').forEach(item => {
                    item.classList.toggle('selected', item.dataset.code === code);
                });
            }

            function resetCouponUI() {
                document.getElementById('couponCode').value = '';
                document.getElementById('couponCodeInput').value = '';
                document.querySelector('.coupon-discount').style.display = 'none';
                const subtotal = parseFloat(document.querySelector('.checkout__total__all li:first-child span').textContent.replace('₹', ''));
                document.getElementById('totalAmount').textContent = `₹${(subtotal + 40).toFixed(2)}`;
                document.getElementById('removeCoupon').style.display = 'none';
                document.querySelectorAll('.coupon-item').forEach(item => item.classList.remove('selected'));
                document.getElementById('couponMessage').textContent = '';
            }

            function showCouponMessage(message, type) {
                const messageElement = document.getElementById('couponMessage');
                messageElement.textContent = message;
                messageElement.className = type === 'success' ? 'text-success' : 'text-danger';
            }
        });
    </script>
    <script>
        function fillAddress(selectedAddress) {
            const data = selectedAddress.dataset;
            document.getElementById('streetAddress').value = data.landmark;
            document.getElementById('city').value = data.city;
            document.getElementById('state').value = data.state;
            document.getElementById('postcode').value = data.pincode;
            document.getElementById('phone').value = data.phone;
        }

        function showNewAddress() {
            document.querySelectorAll('.address-radio').forEach(radio => {
                radio.checked = false;
            });
            document.getElementById('streetAddress').value = '';
            document.getElementById('city').value = '';
            document.getElementById('state').value = '';
            document.getElementById('postcode').value = '';
            document.getElementById('phone').value = '<%= user.phone %>';
        }

        // Initialize with first address
        document.addEventListener('DOMContentLoaded', () => {
            const firstAddress = document.querySelector('.address-radio');
            if (firstAddress) {
                fillAddress(firstAddress);
            }
        });
    </script>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const addressOptions = document.querySelectorAll('.address-option');

            addressOptions.forEach(option => {
                option.addEventListener('click', function () {
                    // Remove selection from all options
                    addressOptions.forEach(opt => opt.classList.remove('selected-address'));
                    // Add selection to clicked option
                    this.classList.add('selected-address');

                    // Get address data
                    const addressId = this.dataset.id;
                    const addressIndex = this.dataset.index;

                    // Update hidden input
                    document.getElementById('selectedAddressId').value = addressId;

                    // Log to console
                    console.log('Selected Address ID:', addressId);
                    console.log('Array Index:', addressIndex);
                });
            });

            // Handle form submission
            document.querySelector('form').addEventListener('submit', function (e) {
                const selectedAddress = document.querySelector('.selected-address');
                if (!selectedAddress) {
                    e.preventDefault();
                    alert('Please select an address or add a new one');
                }
            });
        });
    </script>

    <!-- Razorpay script -->
    <script>
        document.addEventListener('DOMContentLoaded', () => {

            // Handle form submission
            document.querySelector('form').addEventListener('submit', function (e) {
                const selectedAddress = document.querySelector('.selected-address');
                if (!selectedAddress) {
                    e.preventDefault();
                    alert('Please select an address or add a new one');
                    return;
                }

                // Check if Razorpay is selected
                const paymentMethod = document.querySelector('input[name="payment"]:checked').value;
                if (paymentMethod === 'razorpay') {
                    e.preventDefault(); // Prevent form submission
                    initiateRazorpayPayment();
                }
                // For COD, let the form submit normally
            });

            async function initiateRazorpayPayment() {
                try {
                    const selectedAddressId = document.getElementById('selectedAddressId').value;
                    const couponCode = document.getElementById('couponCodeInput').value;
                    const totalAmount = parseFloat(document.getElementById('totalAmount').textContent.replace('₹', ''));

                    console.log('Payment details:', {
                        totalAmount,
                        selectedAddressId,
                        couponCode
                    });

                    // First, create an order on your server
                    const response = await fetch('/create-razorpay-order', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            totalAmount,
                            selectedAddressId,
                            couponCode
                        })
                    });

                    // Check if response is ok
                    if (!response.ok) {
                        const errorText = await response.text();
                        console.error('Server error response:', errorText);
                        throw new Error(`Server error: ${response.status} ${response.statusText}`);
                    }

                    const data = await response.json();
                    console.log('Order created successfully:', data);

                    if (!data.success) {
                        throw new Error(data.message || 'Failed to create order');
                    }

                    // Initialize Razorpay
                    const options = {
                        key: data.key_id,
                        amount: data.order.amount,
                        currency: data.order.currency,
                        name: 'Oxyboo',
                        description: 'Purchase from Oxyboo',
                        order_id: data.order.id,
                        handler: async function (response) {
                            try {
                                console.log('Razorpay payment successful:', response);

                                // Get the products data
                                const products = Array.from(document.querySelectorAll('.checkout_total_products li')).map(li => ({
                                    productId: li.dataset.productId,
                                    variantId: li.dataset.variantId,
                                    quantity: parseInt(li.dataset.quantity),
                                    color: li.querySelector('input[name="color"]').value,
                                    size: li.querySelector('input[name="size"]').value
                                }));

                                // Verify payment on server
                                const verifyResponse = await fetch('/process-payment', {  // Changed to process-payment
                                    method: 'POST',
                                    headers: {
                                        'Content-Type': 'application/json',
                                    },
                                    body: JSON.stringify({
                                        razorpay_payment_id: response.razorpay_payment_id,
                                        razorpay_order_id: response.razorpay_order_id,
                                        razorpay_signature: response.razorpay_signature,
                                        selectedAddressId: selectedAddressId,
                                        couponCode: couponCode,
                                        products: products,
                                        totalAmount: totalAmount
                                    })
                                });

                                if (!verifyResponse.ok) {
                                    const errorText = await verifyResponse.text();
                                    console.error('Verification error response:', errorText);
                                    throw new Error(`Verification error: ${verifyResponse.status}`);
                                }

                                const verifyData = await verifyResponse.json();
                                console.log('Payment verification response:', verifyData);

                                if (verifyData.success) {
                                    // Redirect to order confirmation page
                                    window.location.href = `/order-placed?orderId=${verifyData.orderId}`;
                                } else {
                                    alert('Payment verification failed: ' + verifyData.message);
                                }
                            } catch (error) {
                                console.error('Error during payment verification:', error);
                                alert('Error processing payment verification: ' + error.message);
                            }
                        },
                        prefill: {
                            name: '<%= user.name %>',
                            email: '<%= user.email %>',
                            contact: '<%= user.phone %>'
                        },
                        theme: {
                            color: '#000000'
                        }
                    };

                    const rzp = new Razorpay(options);
                    rzp.on('payment.failed', function (response) {
                        console.error('Payment failed:', response.error);
                        alert(`Payment failed: ${response.error.code} - ${response.error.description}`);
                    });

                    rzp.open();

                } catch (error) {
                    console.error('Error initiating payment:', error);
                    alert('Error initiating payment: ' + error.message);
                }
            }
        });
    </script>

    <!-- Add this hidden input field in your HTML -->
    <input type="hidden" id="totalAmountInput" value="<%= totalAmount %>">
</body>

</html>
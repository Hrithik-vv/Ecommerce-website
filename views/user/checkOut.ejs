<!DOCTYPE html>
<html lang="zxx">

<head>
    <meta charset="UTF-8">
    <meta name="description" content="Male_Fashion Template">
    <meta name="keywords" content="Male_Fashion, unica, creative, html">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Oxyboo | Checkout</title>

    <!-- Google Font -->
    <link href="https://fonts.googleapis.com/css2?family=Nunito+Sans:wght@300;400;600;700;800;900&display=swap"
        rel="stylesheet">

    <!-- Css Styles -->
    <link rel="stylesheet" href="css/bootstrap.min.css" type="text/css">
    <link rel="stylesheet" href="css/font-awesome.min.css" type="text/css">
    <link rel="stylesheet" href="css/elegant-icons.css" type="text/css">
    <link rel="stylesheet" href="css/magnific-popup.css" type="text/css">
    <link rel="stylesheet" href="css/nice-select.css" type="text/css">
    <link rel="stylesheet" href="css/owl.carousel.min.css" type="text/css">
    <link rel="stylesheet" href="css/slicknav.min.css" type="text/css">
    <link rel="stylesheet" href="css/style.css" type="text/css">
    <style>
        .checkout__order__products {
            display: flex;
            justify-content: space-between;
            font-weight: bold;
            margin-bottom: 15px;
        }

        .checkout_total_products {
            list-style: none;
            padding: 0;
            margin-bottom: 20px;
        }

        .checkout_total_products li {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px 0;
            border-bottom: 1px solid #eee;
        }

        .checkout_total_products li:last-child {
            border-bottom: none;
        }

        .checkout_total_products li .product-details {
            display: flex;
            align-items: center;
        }

        .checkout_total_products li .product-details .product-number {
            margin-right: 10px;
            color: #888;
        }

        .checkout_total_products li .product-price {
            display: flex;
            flex-direction: column;
            align-items: flex-end;
        }

        .checkout_total_products li .product-price .quantity {
            font-size: 0.8em;
            color: #666;
            margin-bottom: 5px;
        }

        .existing-addresses {
            margin-bottom: 30px;
            border: 1px solid #eee;
            padding: 20px;
            border-radius: 5px;
        }

        .address-option {
            display: flex;
            align-items: flex-start;
            margin-bottom: 15px;
            padding: 15px;
            border: 1px solid #e1e1e1;
            border-radius: 5px;
            transition: all 0.3s ease;
            cursor: pointer;
        }

        .address-option:hover {
            border-color: #111;
            background-color: #f9f9f9;
        }

        .address-radio {
            margin-top: 5px;
            margin-right: 15px;
        }

        .address-details strong {
            display: block;
            margin-bottom: 5px;
            color: #111;
            font-size: 16px;
        }

        .address-details p {
            margin: 0;
            color: #666;
            line-height: 1.6;
        }

        .new-address-toggle {
            margin-top: 20px;
            cursor: pointer;
            color: #007bff;
            text-decoration: underline;
        }

        .selected-address {
            border-color: #007bff !important;
            background-color: #f8f9fa;
        }

        .payment-options {
            display: flex;
            flex-direction: column;
            gap: 8px;
        }

        #applyCoupon {
            background-color: black;
            color: white;
            border: none;
        }

        #applyCoupon:hover {
            background-color: #333;
            /* Slightly lighter black for hover effect */
        }

        .available-coupons {
            margin-top: 20px;
            padding: 15px;
            background: #f8f9fa;
            border-radius: 8px;
        }

        .available-coupons h6 {
            margin-bottom: 15px;
            color: #333;
            font-weight: 600;
        }

        .coupon-list {
            display: flex;
            flex-direction: column;
            gap: 10px;
        }

        .coupon-item {
            padding: 12px;
            border: 1px dashed #ddd;
            border-radius: 6px;
            background: white;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .coupon-item:hover {
            border-color: #007bff;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }

        .coupon-code {
            font-weight: bold;
            color: #007bff;
            margin-bottom: 5px;
        }

        .coupon-details {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            font-size: 0.9em;
            color: #666;
        }

        .coupon-details span {
            padding-right: 10px;
            border-right: 1px solid #ddd;
        }

        .coupon-details span:last-child {
            border-right: none;
        }

        .no-coupons {
            color: #666;
            font-style: italic;
        }

        .variant-details {
            font-size: 0.9em;
            color: #666;
            margin-left: 8px;
        }
    </style>
</head>

<body>
    <!-- Checkout Section -->
    <section class="checkout spad">
        <div class="container">
            <% if (error) { %>
                <div class="alert alert-danger">
                    <%= error %>
                </div>
                <% } %>
                    <% if (success) { %>
                        <div class="alert alert-success">
                            <%= success %>
                        </div>
                        <% } %>
                            <div class="checkout__form">
                                <form method="post" action="/checkout">
                                    <div class="row">
                                        <div class="col-lg-8 col-md-6">
                                            <div class="coupon-application mt-3">
                                                <input type="text" id="couponCode" placeholder="Enter coupon code"
                                                    class="form-control d-inline w-50">
                                                <button type="button" id="applyCoupon" class="btn btn-dark ml-2">Apply
                                                    Coupon</button>
                                                <div id="couponMessage" class="mt-2"></div>
                                            </div>
                                            <div class="available-coupons mt-3">
                                                <h6>Available Coupons</h6>
                                                <div class="coupon-list">
                                                    <% if (typeof coupons !== 'undefined' && coupons.length > 0) { %>
                                                        <% coupons.forEach(coupon => { %>
                                                            <div class="coupon-item" onclick="applyCouponCode('<%= coupon.name %>')">
                                                                <div class="coupon-code"><%= coupon.name %></div>
                                                                <div class="coupon-details">
                                                                    <span class="discount">Save ₹<%= coupon.offerPrice %></span>
                                                                    <span class="min-purchase">Min. Purchase: ₹<%= coupon.minimumPrice %></span>
                                                                    <span class="expiry">Valid till: <%= new Date(coupon.expireOn).toLocaleDateString() %></span>
                                                                </div>
                                                            </div>
                                                        <% }) %>
                                                    <% } else { %>
                                                        <p class="no-coupons">No coupons available at the moment</p>
                                                    <% } %>
                                                </div>
                                            </div>
                                            <h6 class="checkout__title">Billing Details</h6>
                                            <% if (addresses && addresses.address.length> 0) { %>
                                                <div class="existing-addresses">
                                                    <h6>Select Existing Address</h6>
                                                    <% if (addresses && addresses.address.length> 0) { %>
                                                        <% addresses.address.forEach((addr, index)=> { %>
                                                            <div class="address-option" data-id="<%= addr._id %>"
                                                                data-index="<%= index %>">
                                                                <div class="address-details">
                                                                    <strong>
                                                                        <%= addr.name %>
                                                                    </strong>
                                                                    <p>
                                                                        <%= addr.landMark %>,
                                                                            <%= addr.city %>,
                                                                                <%= addr.state %> - <%= addr.pincode %>
                                                                                        <br>
                                                                                        Phone: <%= addr.phone %>
                                                                    </p>
                                                                </div>
                                                            </div>
                                                            <% }) %>
                                                                <% } %>
                                                                    <button type="button" class="site-btn"
                                                                        data-toggle="modal"
                                                                        data-target="#addAddressModal">
                                                                        Add New Address
                                                                    </button>
                                                                    <input type="hidden" id="selectedAddressId"
                                                                        name="selectedAddressId">
                                                </div>
                                                <% } %>
                                        </div>
                                        <div class="col-lg-4 col-md-6">
                                            <div class="checkout__order">
                                                <h4 class="order__title">Your Order</h4>
                                                <div class="checkout__order__products">Product <span>Total</span></div>
                                                <ul class="checkout_total_products">
                                                    <% cartItems.forEach((item, index) => { %>
                                                        <li data-product-id="<%= item.productId._id %>"
                                                            data-variant-id="<%= item.variantId %>"
                                                            data-quantity="<%= item.quantity %>">
                                                            <div class="product-details">
                                                                <span class="product-number"><%= index + 1 %>.</span>
                                                                <%= item.productId.productName %>
                                                                <% if (item.variant) { %>
                                                                    <span class="variant-details">
                                                                        (<%= item.variant.color %>, <%= item.variant.size %>)
                                                                    </span>
                                                                <% } %>
                                                            </div>
                                                            <div class="product-price">
                                                                <span class="quantity">Qty: <%= item.quantity %></span>
                                                                ₹<%= item.totalPrice.toFixed(2) %>
                                                            </div>
                                                        </li>
                                                    <% }) %>
                                                </ul>
                                                <ul class="checkout__total__all">
                                                    <li>Subtotal <span>₹<%= total.toFixed(2) %></span></li>
                                                    <li class="coupon-discount" style="display: none;">
                                                      Discount <span id="discountAmount">₹0.00</span>
                                                    </li>
                                                    <li>Total <span id="totalAmount">₹<%= total.toFixed(2) %></span></li>
                                                  </ul>
                                                  <input type="hidden" name="couponCode" id="couponCodeInput">
                                                <div class="payment-options">
                                                    <label>
                                                        <input type="radio" name="payment" value="cod" required>
                                                        Cash on Delivery
                                                    </label>
                                                    <label>
                                                        <input type="radio" name="payment" value="razorpay" required>
                                                        Razorpay
                                                    </label>
                                                </div>

                                                <button type="submit" class="site-btn">PLACE ORDER</button>
                                            </div>
                                        </div>
                                    </div>
                                    <input type="hidden" name="products" id="productsData">

                                </form>
                            </div>
        </div>
    </section>
    <div class="modal fade" id="addAddressModal" tabindex="-1" role="dialog" aria-labelledby="addAddressModalLabel"
        aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="addAddressModalLabel">Add New Address</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <form action="/addAddress" method="POST">
                    <div class="modal-body">
                        <div class="row">
                            <div class="col-lg-12">
                                <!-- Address Type -->
                                <div class="checkout__input">
                                    <label>Address Type<span>*</span></label>
                                    <select name="addressType" class="form-control" required>
                                        <option value="Home">Home</option>
                                        <option value="Work">Work</option>
                                        <option value="Other">Other</option>
                                    </select>
                                </div>

                                <!-- Existing Fields -->
                                <div class="checkout__input">
                                    <label>Full Name<span>*</span></label>
                                    <input type="text" name="name" required>
                                </div>
                                <div class="checkout__input">
                                    <label>Street Address</label>
                                    <input type="text" name="landMark" class="checkout_input_add">
                                </div>
                                <div class="checkout__input">
                                    <label>City<span>*</span></label>
                                    <input type="text" name="city" required>
                                </div>
                                <div class="checkout__input">
                                    <label>State<span>*</span></label>
                                    <input type="text" name="state" required>
                                </div>
                                <div class="checkout__input">
                                    <label>Postcode<span>*</span></label>
                                    <input type="number" name="pincode" min="100000" max="999999" required>
                                </div>
                                <div class="checkout__input">
                                    <label>Phone<span>*</span></label>
                                    <input type="text" name="phone" pattern="[0-9]{10}" title="10 digit phone number"
                                        required>
                                </div>
                                <!-- New Alt Phone Field -->
                                <div class="checkout__input">
                                    <label>Alternative Phone<span>*</span></label>
                                    <input type="text" name="altPhone" pattern="[0-9]{10}" title="10 digit phone number"
                                        required>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Save Address</button>
                    </div>
                </form>
            </div>
        </div>
    </div>


    <script src="js/jquery-3.3.1.min.js"></script>
    <script src="js/bootstrap.min.js"></script>
    <script src="js/jquery.nice-select.min.js"></script>
    <script src="js/jquery.nicescroll.min.js"></script>
    <script src="js/jquery.magnific-popup.min.js"></script>
    <script src="js/jquery.countdown.min.js"></script>
    <script src="js/jquery.slicknav.js"></script>
    <script src="js/mixitup.min.js"></script>
    <script src="js/owl.carousel.min.js"></script>
    <script src="js/main.js"></script>
    <script src="js/jquery-3.3.1.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const addressOptions = document.querySelectorAll('.address-option');

            addressOptions.forEach(option => {
                option.addEventListener('click', function () {
                    addressOptions.forEach(opt => opt.classList.remove('selected-address'));
                    this.classList.add('selected-address');
                    document.getElementById('selectedAddressId').value = this.dataset.id;
                });
            });

            document.querySelector('form').addEventListener('submit', function (e) {
                const selectedAddress = document.querySelector('.selected-address');
                if (!selectedAddress) {
                    e.preventDefault();
                    alert('Please select an address or add a new one');
                    return;
                }

                // Collect address information
                const addressId = selectedAddress.dataset.id;
                const addressIndex = selectedAddress.dataset.index;

                // Collect product information
                const products = Array.from(document.querySelectorAll('.checkout_total_products li')).map(li => ({
                    productId: li.dataset.productId,
                    quantity: parseInt(li.dataset.quantity)
                }));

                // Log the data to console
                console.log({
                    selectedAddress: {
                        id: addressId,
                        index: addressIndex
                    },
                    products: products
                });

                // Optional: Add the products data to form submission
                document.getElementById('productsData').value = JSON.stringify(products);
            });
        });
    </script>
    <script>
        function fillAddress(selectedAddress) {
            const data = selectedAddress.dataset;
            document.getElementById('streetAddress').value = data.landmark;
            document.getElementById('city').value = data.city;
            document.getElementById('state').value = data.state;
            document.getElementById('postcode').value = data.pincode;
            document.getElementById('phone').value = data.phone;
        }

        function showNewAddress() {
            document.querySelectorAll('.address-radio').forEach(radio => {
                radio.checked = false;
            });
            document.getElementById('streetAddress').value = '';
            document.getElementById('city').value = '';
            document.getElementById('state').value = '';
            document.getElementById('postcode').value = '';
            document.getElementById('phone').value = '<%= user.phone %>';
        }

        // Initialize with first address
        document.addEventListener('DOMContentLoaded', () => {
            const firstAddress = document.querySelector('.address-radio');
            if (firstAddress) {
                fillAddress(firstAddress);
            }
        });
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const addressOptions = document.querySelectorAll('.address-option');

            addressOptions.forEach(option => {
                option.addEventListener('click', function () {
                    // Remove selection from all options
                    addressOptions.forEach(opt => opt.classList.remove('selected-address'));
                    // Add selection to clicked option
                    this.classList.add('selected-address');

                    // Get address data
                    const addressId = this.dataset.id;
                    const addressIndex = this.dataset.index;

                    // Update hidden input
                    document.getElementById('selectedAddressId').value = addressId;

                    // Log to console
                    console.log('Selected Address ID:', addressId);
                    console.log('Array Index:', addressIndex);
                });
            });

            // Handle form submission
            document.querySelector('form').addEventListener('submit', function (e) {
                const selectedAddress = document.querySelector('.selected-address');
                if (!selectedAddress) {
                    e.preventDefault();
                    alert('Please select an address or add a new one');
                }
            });
        });
    </script>

    <!-- Razorpay script -->
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <script>

        document.querySelector('form').addEventListener('submit', async function (e) {
            e.preventDefault();

            const paymentMethod = document.querySelector('input[name="payment"]:checked').value;

            if (paymentMethod === 'razorpay') {
                const formData = new FormData(this);
                const products = JSON.parse(document.getElementById('productsData').value);
                const totalAmount = <%= total %>;

                try {
                    // Create Razorpay order
                    const response = await fetch('/create-razorpay-order', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({
                            amount: totalAmount,
                            currency: 'INR',
                            receipt: 'order_' + Date.now()
                        })
                    });

                    const orderData = await response.json();

                    // Razorpay options
                    const options = {
                        key: '<%= process.env.RAZORPAY_KEY_ID %>',
                        amount: orderData.amount,
                        currency: orderData.currency,
                        name: 'Oxyboo',
                        description: 'Order Payment',
                        order_id: orderData.id,
                        handler: async function (response) {
                            // Verify payment
                            const verification = await fetch('/verify-payment', {
                                method: 'POST',
                                headers: { 'Content-Type': 'application/json' },
                                body: JSON.stringify({
                                    razorpay_payment_id: response.razorpay_payment_id,
                                    razorpay_order_id: response.razorpay_order_id,
                                    razorpay_signature: response.razorpay_signature,
                                    products: products,
                                    addressId: document.getElementById('selectedAddressId').value
                                })
                            });

                            const result = await verification.json();
                            if (result.success) {
                                window.location.href = `/order-placed?orderId=${result.orderId}`;
                            } else {
                                alert('Payment verification failed');
                            }
                        },
                        prefill: {
                            name: '<%= user.name %>',
                            email: '<%= user.email %>',
                            contact: '<%= user.phone %>'
                        },
                        theme: {
                            color: '#3399cc'
                        }
                    };

                    const rzp = new Razorpay(options);
                    rzp.open();

                } catch (error) {
                    console.error('Payment error:', error);
                    alert('Payment processing failed');
                }
            } else {
                // For COD or other methods
                this.submit();
            }
        });
    </script>

<!-- Coupon script -->
<script>
    document.getElementById('applyCoupon').addEventListener('click', async () => {
  const couponCode = document.getElementById('couponCode').value;
  const total = <%= total %>;
  
  try {
    const response = await fetch('/apply-coupon', {
      method: 'POST',
      headers: {'Content-Type': 'application/json'},
      body: JSON.stringify({ couponCode, total })
    });

    const result = await response.json();
    
    if (result.success) {
      document.getElementById('couponMessage').textContent = result.message;
      document.getElementById('couponMessage').className = 'text-success';
      
      // Update totals
      document.querySelector('.coupon-discount').style.display = 'block';
      document.getElementById('discountAmount').textContent = `₹${result.discount.toFixed(2)}`;
      document.getElementById('totalAmount').textContent = `₹${result.newTotal.toFixed(2)}`;
      document.getElementById('couponCodeInput').value = couponCode;
    } else {
      document.getElementById('couponMessage').textContent = result.message;
      document.getElementById('couponMessage').className = 'text-danger';
    }
  } catch (error) {
    console.error('Error applying coupon:', error);
  }
});
</script>

<script>
    function applyCouponCode(code) {
        const couponElement = document.querySelector(`[onclick="applyCouponCode('${code}')"]`);
        const currentCouponCode = document.getElementById('couponCodeInput').value;
        const subtotal = parseFloat(document.querySelector('.checkout__total__all li:first-child span').textContent.replace('₹', ''));
        const couponInput = document.getElementById('couponCode'); // Get the visible input element
        
        // If this coupon is already selected, deselect it
        if (code === currentCouponCode) {
            // Reset all visual states
            couponElement.style.opacity = '1';
            couponElement.style.backgroundColor = '';
            couponElement.style.borderColor = '';
            
            // Reset both input fields
            document.getElementById('couponCodeInput').value = '';
            couponInput.value = ''; // Clear the visible input
            
            document.getElementById('couponMessage').textContent = 'Coupon removed';
            document.getElementById('couponMessage').className = 'text-info';
            
            // Reset the totals
            document.querySelector('.coupon-discount').style.display = 'none';
            document.getElementById('totalAmount').textContent = `₹${subtotal.toFixed(2)}`;
            
            // Re-enable all coupons
            document.querySelectorAll('.coupon-item').forEach(item => {
                item.style.opacity = '1';
                item.style.pointerEvents = 'auto';
                item.style.backgroundColor = '';
                item.style.borderColor = '';
            });
            return;
        }
        
        // Apply new coupon
        const offerPrice = parseFloat(couponElement.querySelector('.discount').textContent.replace('Save ₹', ''));
        const minimumPrice = parseFloat(couponElement.querySelector('.min-purchase').textContent.replace('Min. Purchase: ₹', ''));
        
        // Validate minimum purchase
        if (subtotal < minimumPrice) {
            document.getElementById('couponMessage').textContent = `Minimum purchase of ₹${minimumPrice} required`;
            document.getElementById('couponMessage').className = 'text-danger';
            return;
        }
        
        // Calculate new totals
        const discount = Math.min(offerPrice, subtotal);
        const newTotal = subtotal - discount;
        
        // Update UI for successful application
        document.getElementById('couponMessage').textContent = 'Coupon applied successfully';
        document.getElementById('couponMessage').className = 'text-success';
        document.querySelector('.coupon-discount').style.display = 'block';
        document.getElementById('discountAmount').textContent = `₹${discount.toFixed(2)}`;
        document.getElementById('totalAmount').textContent = `₹${newTotal.toFixed(2)}`;
        
        // Update both input fields with the coupon code
        document.getElementById('couponCodeInput').value = code;
        couponInput.value = code; // Update the visible input
        
        // Update coupon visuals
        document.querySelectorAll('.coupon-item').forEach(item => {
            item.style.opacity = '0.5';
            item.style.pointerEvents = 'auto'; // Keep clickable for deselection
            item.style.backgroundColor = '';
            item.style.borderColor = '';
        });
        
        // Highlight selected coupon
        couponElement.style.opacity = '1';
        couponElement.style.backgroundColor = '#e8f5e9';
        couponElement.style.borderColor = '#4caf50';
    }
</script>
</body>

</html>
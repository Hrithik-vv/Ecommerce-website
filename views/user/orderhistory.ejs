<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Order History</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        /* Navbar Styles */
        .navbar {
            background-color: #ffffff;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            padding: 1rem 0;
        }

        .navbar-brand {
            font-weight: 700;
            color: #2c3e50;
            font-size: 1.5rem;
        }

        .nav-link {
            color: #34495e;
            font-weight: 500;
            padding: 0.5rem 1rem;
            transition: color 0.3s ease;
        }

        .nav-link:hover {
            color: #3498db;
        }

        .navbar-toggler {
            border: none;
            padding: 0.5rem;
        }

        .navbar-toggler:focus {
            box-shadow: none;
        }

        .dropdown-menu {
            border: none;
            box-shadow: 0 4px 6px rgba(0,0,0,0.1);
        }

        .dropdown-item {
            padding: 0.5rem 1.5rem;
            color: #34495e;
        }

        .dropdown-item:hover {
            background-color: #f8f9fa;
            color: #3498db;
        }

        .order-card {
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            border-radius: 15px;
            transition: transform 0.3s ease;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            margin-bottom: 1.5rem;
            padding: 15px;
        }

        .order-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 15px rgba(0, 0, 0, 0.2);
        }

        .product-image {
            width: 100px;
            height: 100px;
            object-fit: cover;
            border-radius: 10px;
        }

        .status-badge {
            padding: 8px 16px;
            font-weight: 500;
            font-size: 0.9rem;
            text-transform: capitalize;
            letter-spacing: 0.5px;
        }

        .status-badge.bg-warning {
            background-color: #10e5f8 !important;
            color: #000 !important;
        }
        
        .status-badge.bg-success {
            background-color: #28a745 !important;
            color: #fff !important;
        }
        
        .status-badge.bg-danger {
            background-color: #dc3545 !important;
            color: #fff !important;
        }
        
        .status-badge.bg-primary {
            background-color: #e87110 !important;
            color: #fff !important;
        }
        
        .status-badge.bg-secondary {
            background-color: #0a4d4e !important;
            color: #fff !important;
        }

        .total-amount {
            font-size: 1rem;
            font-weight: 600;
            color: #2c3e50;
        }

        .order-id {
            color: #6c757d;
            font-size: 0.9rem;
        }

        .view-btn {
            font-size: 0.85rem;
            padding: 6px 12px;
            border-radius: 5px;
        }

        /* Add to your existing style section */
        .navbar .navbar-nav.mx-auto {
            gap: 10rem;  /* Adds space between nav items */
        }

        .navbar .nav-link {
            position: relative;
        }

        /* Underline effect on hover */
        .navbar .nav-link::after {
            content: '';
            position: absolute;
            width: 0;
            height: 2px;
            bottom: 0;
            left: 50%;
            background-color: #3498db;
            transition: all 0.3s ease;
        }

        .navbar .nav-link:hover::after {
            width: 100%;
            left: 0;
        }

        @media (max-width: 991.98px) {
            .navbar-nav.mx-auto {
                text-align: center;
                margin: 1rem 0;
            }
            
            .navbar-nav.mx-auto .nav-item {
                padding: 0.5rem 0;
            }
        }

        .modal-content {
            border-radius: 15px;
            border: none;
        }
        .modal-header {
            background-color: #f8f9fa;
            border-radius: 15px 15px 0 0;
            border-bottom: 1px solid #dee2e6;
        }
        .modal-footer {
            border-top: 1px solid #dee2e6;
        }
        .form-select, .form-control {
            border-radius: 8px;
            border: 1px solid #dee2e6;
        }
        .form-select:focus, .form-control:focus {
            border-color: #86b7fe;
            box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
        }
        .btn-warning {
            background-color: #ffc107;
            border: none;
            color: #000;
        }
        .btn-warning:hover {
            background-color: #ffca2c;
            color: #000;
        }
        .product-image {
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }

        .pagination-controls {
            background: white;
            padding: 1rem;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }

        .pagination-controls button {
            min-width: 40px;
            height: 40px;
            padding: 0.375rem 0.75rem;
            font-size: 0.9rem;
            border-radius: 8px;
            margin: 0 2px;
        }

        .pagination-controls button.active {
            background-color: #0d6efd;
            color: white;
            border-color: #0d6efd;
        }

        .pagination-controls button:disabled {
            background-color: #e9ecef;
            border-color: #dee2e6;
            cursor: not-allowed;
        }

        .pagination-info {
            font-size: 0.9rem;
            color: #6c757d;
        }

        #itemsPerPage {
            width: 70px !important;
            padding: 0.25rem 0.5rem;
            font-size: 0.875rem;
            border-radius: 4px;
        }

        /* Smooth transitions for pagination */
        .pagination-item {
            transition: opacity 0.3s ease;
        }

        .pagination-item[style*="display: none"] {
            opacity: 0;
        }

        .pagination-item[style*="display: block"] {
            opacity: 1;
        }
        .breadcrumb {
    background-color: #f8f9fa; /* Light background */
    padding: 10px 15px;
    border-radius: 8px; /* Rounded corners */
    display: flex;
    justify-content: center; /* Center align */
    font-size: 14px;
}

.breadcrumb-item a {
    text-decoration: none;
    color: #007bff; /* Bootstrap primary blue */
    transition: color 0.3s ease-in-out;
}

.breadcrumb-item a:hover {
    color: #0056b3; /* Darker blue on hover */
    text-decoration: underline;
}

.breadcrumb-item.active {
    font-weight: bold;
    color: #6c757d; /* Grey color for the active item */
}

    </style>
</head>

<body class="bg-light">
    <!-- Navigation Bar -->
    <nav class="navbar navbar-expand-lg navbar-light fixed-top">
        <div class="container">
            <a class="navbar-brand" href="/">Oxyboo</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav"
                aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <!-- Center menu items -->
                <ul class="navbar-nav mx-auto">
                    <li class="nav-item">
                        <a class="nav-link" href="/">Home</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/shop">Shop</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/about">About</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/contact">Contact</a>
                    </li>
                </ul>
                <!-- Right-aligned items -->
                <ul class="navbar-nav">
                    <li class="nav-item">
                        <a class="nav-link" href="/shopping-cart">
                            <i class="fas fa-shopping-cart"></i> Cart
                        </a>
                    </li>
                    <!-- <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button"
                            data-bs-toggle="dropdown" aria-expanded="false">
                            <i class="fas fa-user"></i> Account
                        </a>
                        <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="navbarDropdown">
                            <li><a class="dropdown-item" href="/profile">Profile</a></li>
                            <li><a class="dropdown-item active" href="/orders">Orders</a></li>
                            <li><a class="dropdown-item" href="/wishlist">Wishlist</a></li>
                            <li>
                                <hr class="dropdown-divider">
                            </li>
                            <li><a class="dropdown-item" href="/logout">Logout</a></li>
                        </ul>
                    </li> -->
                </ul>
            </div>
        </div>
    </nav>

    <!-- Main Content with proper spacing from navbar -->
    <div class="container" style="margin-top: 100px;">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h2>Order History</h2>
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb mb-0">
                    <li class="breadcrumb-item"><a href="/">Home</a></li>
                    <li class="breadcrumb-item"><a href="/userProfile">profile</a></li>
                    <li class="breadcrumb-item active" aria-current="page">Order History</li>
                </ol>
            </nav>
        </div>

        <!-- Orders Container -->
        <div id="ordersContainer">
            <% orders.forEach(order=> { %>
                <% order.products.forEach(product=> { %>
                    <p>
                        <% console.log(order) %>
                    </p>
                    <div class="order-card pagination-item">
                        <div class="row align-items-center">
                            <!-- Product Image -->
                            <div class="col-md-2 text-center">
                                <img src="<%= product.productId.image1 %>" class="product-image"
                                    alt="<%= product.productId.productName %>">
                            </div>

                            <!-- Product Details -->
                            <div class="col-md-5">
                                <h5 class="mb-1">
                                    <%= product.productId.productName %>
                                </h5>
                                <p class="mb-1 text-muted">Qty: <%= product.quantity %>
                                </p>
                                <p class="total-amount mb-0">Price: ₹<%= product.totalPrice %>
                                </p>
                            </div>

                            <!-- Order Summary -->
                            <div class="col-md-3 text-center">
                                <span class="status-badge badge <%= 
                                    product.status === 'Pending' ? 'bg-warning text-dark' : 
                                    product.status === 'Delivered' ? 'bg-success' : 
                                    product.status === 'Cancelled' ? 'bg-danger' :
                                    product.status === 'Processing' ? 'bg-primary' :
                                    product.status === 'Returned' ? 'bg-secondary' : 
                                    'bg-secondary' %>">
                                    <%= product.status %>
                                </span>
                                <% if (product.returnStatus) { %>
                                    <span class="badge <%= 
                                        product.returnStatus === 'Rejected' ? 'bg-danger' :
                                        product.returnStatus === 'Approved' ? 'bg-success' :
                                        product.returnStatus === 'Pending' ? 'bg-warning text-dark' :
                                        'bg-secondary' %> mt-2">
                                        Return <%= product.returnStatus %>
                                    </span>
                                <% } %>
                            </div>

                            <!-- View Button -->
                            <div class="col-md-2 text-center d-flex flex-column gap-2">
                                <a href="/order-view?orderId=<%= order.orderId %>" class="btn btn-primary view-btn">
                                    View Details
                                </a>
                                
                                <% if (order.paymentStatus === 'failed' && order.paymentMethod === 'Razorpay') { %>
                                    <button class="btn btn-warning view-btn" onclick="retryPayment('<%= order._id %>', <%= order.totalAmount %>)">
                                        Retry Payment
                                    </button>
                                <% } else if (['Pending', 'Processing', 'Shipped'].includes(product.status)) { %>
                                    <button class="btn btn-danger view-btn" onclick="showCancelModal('<%= order._id %>', '<%= product.productId._id %>')">
                                        Cancel
                                    </button>
                                <% } else if (product.status === 'Delivered') { %>
                                    <% if (product.returnStatus === 'Rejected') { %>
                                        <span class="badge bg-danger">Return Rejected</span>
                                    <% } else if (product.returnStatus === 'Approved') { %>
                                        <span class="badge bg-success">Return Approved</span>
                                    <% } else if (!product.returnStatus && !product.isReturned) { %>
                                        <button class="btn btn-warning view-btn" data-bs-toggle="modal" 
                                            data-bs-target="#returnModal<%= order._id %>_<%= product.productId._id %>">
                                            Return
                                        </button>
                                    <% } %>
                                <% } %>
                            </div>
                        </div>
                    </div>

                    <!-- Return Modal -->
                    <div class="modal fade" id="returnModal<%= order._id %>_<%= product.productId._id %>" tabindex="-1" aria-hidden="true">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title">Return Request</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <form action="/return-product" method="POST">
                                    <div class="modal-body">
                                        <input type="hidden" name="orderId" value="<%= order._id %>">
                                        <input type="hidden" name="productId" value="<%= product.productId._id %>">
                                        
                                        <div class="mb-4">
                                            <h6 class="mb-3">Product Details:</h6>
                                            <div class="d-flex align-items-center">
                                                <img src="<%= product.productId.image1 %>" alt="<%= product.productId.productName %>" 
                                                    class="product-image me-3" style="width: 60px; height: 60px; object-fit: cover;">
                                                <div>
                                                    <p class="mb-1 fw-bold"><%= product.productId.productName %></p>
                                                    <p class="mb-0 text-muted">Quantity: <%= product.quantity %></p>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="mb-3">
                                            <label for="returnReason<%= order._id %>_<%= product.productId._id %>" class="form-label">Return Reason</label>
                                            <select class="form-select" id="returnReason<%= order._id %>_<%= product.productId._id %>" 
                                                name="returnReason" required>
                                                <option value="">Select a reason</option>
                                                <option value="Wrong Size">Wrong Size</option>
                                                <option value="Damaged Product">Damaged Product</option>
                                                <option value="Not as Described">Not as Described</option>
                                                <option value="Quality Issues">Quality Issues</option>
                                                <option value="Other">Other</option>
                                            </select>
                                        </div>
                                        
                                        <div class="mb-3">
                                            <label for="returnComments<%= order._id %>_<%= product.productId._id %>" class="form-label">Additional Comments</label>
                                            <textarea class="form-control" id="returnComments<%= order._id %>_<%= product.productId._id %>" 
                                                name="returnComments" rows="3" placeholder="Please provide additional details about your return request"></textarea>
                                        </div>
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                        <button type="submit" class="btn btn-primary">Submit Return Request</button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                <% }) %>
            <% }) %>
        </div>

        <!-- Pagination Controls -->
        <div class="pagination-controls d-flex flex-column align-items-center mt-4 mb-4">
            <div class="pagination-numbers mb-2"></div>
            
        </div>
        

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    
    <!-- Pagination Script -->
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            let currentPage = 1;
            const itemsPerPage = 10; // Fixed at 10 items per page
            
            const ordersContainer = document.getElementById('ordersContainer');
            const paginationNumbers = document.querySelector('.pagination-numbers');
            const items = document.querySelectorAll('.pagination-item');
            const totalItems = items.length;

            function updatePagination() {
                const totalPages = Math.ceil(totalItems / itemsPerPage);
                
                // Hide all items first
                items.forEach(item => item.style.display = 'none');
                
                // Show items for current page
                const start = (currentPage - 1) * itemsPerPage;
                const end = Math.min(start + itemsPerPage, totalItems);
                
                for(let i = start; i < end; i++) {
                    if(items[i]) {
                        items[i].style.display = 'block';
                    }
                }

                // Generate pagination buttons
                let paginationHTML = '';
                
                // Previous button
                paginationHTML += `
                    <button class="btn btn-outline-primary me-2" 
                            ${currentPage === 1 ? 'disabled' : ''} 
                            onclick="changePage(${currentPage - 1})">
                        <i class="fas fa-chevron-left"></i>
                    </button>`;

                // Page numbers
                for (let i = 1; i <= totalPages; i++) {
                    paginationHTML += `
                        <button class="btn btn-outline-primary me-2 ${i === currentPage ? 'active' : ''}" 
                                onclick="changePage(${i})">
                            ${i}
                        </button>`;
                }

                // Next button
                paginationHTML += `
                    <button class="btn btn-outline-primary" 
                            ${currentPage === totalPages ? 'disabled' : ''} 
                            onclick="changePage(${currentPage + 1})">
                        <i class="fas fa-chevron-right"></i>
                    </button>`;

                paginationNumbers.innerHTML = paginationHTML;

                // Update info text
                const startItem = Math.min(start + 1, totalItems);
                const endItem = Math.min(end, totalItems);
                document.getElementById('startItem').textContent = startItem;
                document.getElementById('endItem').textContent = endItem;
                document.getElementById('totalItems').textContent = totalItems;
            }

            // Global function to change page
            window.changePage = function(page) {
                if (page < 1 || page > Math.ceil(totalItems / itemsPerPage)) return;
                currentPage = page;
                updatePagination();
                // Smooth scroll to top of orders container
                ordersContainer.scrollIntoView({ behavior: 'smooth', block: 'start' });
            }

            // Initialize pagination
            updatePagination();
        });

        function showToast(type, message) {
            const toastContainer = document.createElement('div');
            toastContainer.style.position = 'fixed';
            toastContainer.style.top = '20px';
            toastContainer.style.right = '20px';
            toastContainer.style.zIndex = '1050';
            
            const toast = document.createElement('div');
            toast.className = `toast align-items-center text-white bg-${type === 'success' ? 'success' : 'danger'} border-0`;
            toast.setAttribute('role', 'alert');
            toast.setAttribute('aria-live', 'assertive');
            toast.setAttribute('aria-atomic', 'true');
            
            toast.innerHTML = `
                <div class="d-flex">
                    <div class="toast-body">
                        ${message}
                    </div>
                    <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
            `;
            
            toastContainer.appendChild(toast);
            document.body.appendChild(toastContainer);
            
            const bsToast = new bootstrap.Toast(toast);
            bsToast.show();
            
            toast.addEventListener('hidden.bs.toast', () => {
                toastContainer.remove();
            });
        }
    </script>

    <script>
    function showCancelModal(orderId, productId) {
        // Store the IDs in the modal's hidden inputs
        document.getElementById('cancelOrderId').value = orderId;
        document.getElementById('cancelProductId').value = productId;
        
        // Reset the form
        document.getElementById('cancelReason').value = '';
        document.getElementById('cancelComments').value = '';
        
        // Show the modal
        const modal = new bootstrap.Modal(document.getElementById('cancelOrderModal'));
        modal.show();
    }

    function submitCancellation() {
        const orderId = document.getElementById('cancelOrderId').value;
        const productId = document.getElementById('cancelProductId').value;
        const reason = document.getElementById('cancelReason').value;
        const comments = document.getElementById('cancelComments').value;

        if (!reason) {
            showToast('error', 'Please select a cancellation reason');
            return;
        }

        fetch('/cancel-order', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                orderId: orderId,
                productId: productId,
                cancelReason: reason,
                cancelComments: comments
            })
        })
        .then(response => response.json())
        .then(data => {
            // Close the modal
            const modal = bootstrap.Modal.getInstance(document.getElementById('cancelOrderModal'));
            modal.hide();

            if (data.success) {
                showToast('success', 'Order cancelled successfully');
                setTimeout(() => {
                    window.location.reload();
                }, 1500);
            } else {
                showToast('error', data.message || 'Failed to cancel order');
            }
        })
        .catch(error => {
            console.log(error);
            showToast('error', 'An error occurred while cancelling the order');
        });
    }
    </script>

    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <script>
    function retryPayment(orderId, totalAmount) {
        if (confirm('Would you like to retry the payment?')) {
            // Initialize Razorpay payment directly with available data
            const options = {
                key: 'rzp_test_zzoNHcSLnHEEZ7', // Replace with your actual Razorpay key
                amount: totalAmount * 100, // Convert to paise/cents
                currency: 'INR',
                name: "Oxyboo",
                description: "Order Payment Retry",
                handler: function (response) {
                    // Check if we have all required fields from Razorpay response
                    if (!response.razorpay_payment_id || !response.razorpay_order_id || !response.razorpay_signature) {
                        showToast('error', 'Invalid payment response');
                        return;
                    }

                    // On successful payment, update order status
                    fetch('/update-payment-status', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            orderId: orderId
                        })
                    })
                    .then(res => res.json())
                    .then(result => {
                        if (result.success) {
                            showToast('success', 'Payment successful!');
                            setTimeout(() => {
                                window.location.reload();
                            }, 1500);
                        } else {
                            showToast('error', result.message || 'Payment verification failed');
                        }
                    })
                    .catch(error => {
                        console.error(error);
                        showToast('error', 'Error updating payment status');
                    });
                },
                modal: {
                    ondismiss: function() {
                        showToast('error', 'Payment cancelled');
                    }
                }
            };

            const razorpayInstance = new Razorpay(options);
            razorpayInstance.open();

            // Handle payment failure
            razorpayInstance.on('payment.failed', function(response) {
                showToast('error', 'Payment failed. Please try again.');
            });
        }
    }
    </script>

    <!-- Add this modal HTML just before the closing body tag -->
    <div class="modal fade" id="cancelOrderModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Cancel Order</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" id="cancelOrderId">
                    <input type="hidden" id="cancelProductId">
                    
                    <div class="mb-3">
                        <label for="cancelReason" class="form-label">Cancellation Reason</label>
                        <select class="form-select" id="cancelReason" required>
                            <option value="">Select a reason</option>
                            <option value="Changed Mind">Changed My Mind</option>
                            <option value="Ordered Wrong Item">Ordered Wrong Item</option>
                            <option value="Found Better Price">Found Better Price Elsewhere</option>
                            <option value="Shipping Delay">Shipping Delay</option>
                            <option value="Other">Other</option>
                        </select>
                    </div>
                    
                    <div class="mb-3">
                        <label for="cancelComments" class="form-label">Additional Comments</label>
                        <textarea class="form-control" id="cancelComments" rows="3" 
                            placeholder="Please provide any additional details about your cancellation"></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-danger" onclick="submitCancellation()">Submit Cancellation</button>
                </div>
            </div>
        </div>
    </div>
</body>

</html>
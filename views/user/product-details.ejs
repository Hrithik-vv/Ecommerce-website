    <!DOCTYPE html>
    <html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= product.productName %> | Oxyboo</title>
    
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css">
    <style>
        body {
            font-family: -apple-system, BlinkMacSystemFont, sans-serif;
            background: #fff;
            color: #333;
            line-height: 1.6;
        }

        .product-section {
            padding: 40px 0;
        }

        /* Image Gallery */
        .main-image {
            width: 100%;
            max-height: 600px;
            object-fit: contain;
            margin-bottom: 20px;
        }

        .thumbnail-row {
            display: flex;
            gap: 10px;
            margin-bottom: 30px;
        }

        .thumbnail {
            width: 80px;
            height: 80px;
            object-fit: cover;
            cursor: pointer;
            border: 1px solid #ddd;
            padding: 2px;
        }

        .thumbnail.active {
            border-color: #000;
        }

        /* Product Info */
        .product-title {
            font-size: 24px;
            margin-bottom: 20px;
        }

        .price-block {
            margin-bottom: 30px;
        }

        .current-price {
            font-size: 24px;
            font-weight: 600;
        }

        .original-price {
            color: #999;
            text-decoration: line-through;
            margin-left: 10px;
        }

        .discount {
            background: #000;
            color: #fff;
            padding: 4px 8px;
            font-size: 14px;
            margin-left: 10px;
        }

        /* Variants */
        .variant-block {
            margin-bottom: 25px;
        }

        .variant-label {
            font-size: 14px;
            margin-bottom: 10px;
        }

        .color-options {
            display: flex;
            gap: 10px;
            margin-bottom: 20px;
        }

        .color-option {
            width: 30px;
            height: 30px;
            border-radius: 50%;
            cursor: pointer;
            border: 1px solid #ddd;
        }

        .color-option.selected {
            border: 2px solid #000;
        }

        .size-options {
            display: flex;
            gap: 10px;
            flex-wrap: wrap;
        }

        .size-option {
            padding: 8px 16px;
            border: 1px solid #ddd;
            cursor: pointer;
            min-width: 45px;
            text-align: center;
        }

        .size-option.selected {
            background: #000;
            color: #fff;
            border-color: #000;
        }

        /* Add to Cart */
        .quantity-row {
            display: flex;
            gap: 15px;
            margin-bottom: 20px;
        }

        .quantity-input {
            width: 80px;
            padding: 8px;
            border: 1px solid #ddd;
            text-align: center;
        }

        .add-cart-btn {
            width: 100%;
            padding: 12px;
            background: #000;
            color: #fff;
            border: none;
            margin-bottom: 20px;
        }

        .add-cart-btn:hover {
            background: #333;
        }

        /* Description */
        .description {
            margin-top: 30px;
            padding-top: 20px;
            border-top: 1px solid #ddd;
        }

        @media (max-width: 768px) {
            .product-section {
                padding: 20px 0;
            }

            .thumbnail-row {
                justify-content: center;
            }

            .product-title {
                font-size: 20px;
            }

            .size-options {
                justify-content: center;
            }
        }

        /* Related Products */
        .related-products {
            padding: 40px 0;
            background: #f8f8f8;
            margin-top: 40px;
        }

        .section-title {
            font-size: 24px;
            margin-bottom: 30px;
            text-align: center;
        }

        .product-card {
            background: white;
            border-radius: 8px;
            overflow: hidden;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

        .product-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }

        .product-link {
            text-decoration: none;
            color: inherit;
        }

        .product-image {
            position: relative;
            padding-top: 100%; /* 1:1 Aspect Ratio */
            overflow: hidden;
        }

        .product-image img {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
                object-fit: cover;
            }

        .product-info {
            padding: 15px;
        }

        .product-name {
            font-size: 16px;
            margin-bottom: 10px;
            color: #333;
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
            overflow: hidden;
        }

        .product-price {
            display: flex;
                align-items: center;
                gap: 10px;
        }

        .product-price .current-price {
            font-size: 18px;
            font-weight: 600;
        }

        .product-price .original-price {
                font-size: 14px;
            color: #999;
            text-decoration: line-through;
        }

        @media (max-width: 768px) {
            .related-products {
                padding: 20px 0;
            }

            .section-title {
                font-size: 20px;
                margin-bottom: 20px;
            }

            .product-name {
                font-size: 14px;
            }

            .product-price .current-price {
                font-size: 16px;
            }
        }

        /* Add these styles */
        .image-zoom-container {
            position: relative;
            width: 100%;
            max-width: 600px;
            margin: 0 auto;
        }

        .main-image {
            width: 100%;
            height: auto;
            display: block;
        }

        .zoom-lens {
            position: absolute;
            border: 1px solid #d4d4d4;
            width: 150px;
            height: 150px;
            background: rgba(255, 255, 255, 0.4);
            cursor: crosshair;
            display: none;
        }

        .zoom-result {
            position: absolute;
            top: 0;
            left: 105%; /* Position it to the right of the main image */
            width: 500px;
            height: 500px;
            border: 1px solid #d4d4d4;
            background: #fff;
            display: none;
            overflow: hidden;
            z-index: 999;
        }

        @media (max-width: 1200px) {
            .zoom-result {
                display: none !important; /* Disable zoom on smaller screens */
            }
        }
    </style>
</head>
<body>
    <%- include("../../views/partials/user/header") %>

    <div class="container product-section">
                    <div class="row">
            <!-- Images -->
            <div class="col-md-6">
                <div class="image-zoom-container">
                    <img src="<%= product.image1 %>" id="mainImage" class="main-image" alt="<%= product.productName %>">
                    <div class="zoom-lens"></div>
                    <div class="zoom-result"></div>
                </div>
                <div class="thumbnail-row">
                    <img src="<%= product.image1 %>" class="thumbnail active" onclick="changeImage(this)">
                    <% if(product.image2) { %>
                        <img src="<%= product.image2 %>" class="thumbnail" onclick="changeImage(this)">
                    <% } %>
                    <% if(product.image3) { %>
                        <img src="<%= product.image3 %>" class="thumbnail" onclick="changeImage(this)">
                    <% } %>
                    <% if(product.image4) { %>
                        <img src="<%= product.image4 %>" class="thumbnail" onclick="changeImage(this)">
                    <% } %>
                            </div>
                        </div>

            <!-- Product Info -->
            <div class="col-md-6">
                <h1 class="product-title"><%= product.productName %></h1>
                
                <div class="price-block">
                    <span class="current-price">₹<%= (product.variants[0].price * (1 - Math.max(product.offer, product.category.categoryOffer) / 100)).toFixed(2) %></span>
                    <span class="original-price">₹<%= product.variants[0].price %></span>
                    <span class="discount"><%= Math.max(product.offer, product.category.categoryOffer) %>% OFF</span>
                                </div>

                <form id="add-to-cart-form">
                    <div class="variant-block">
                        <div class="variant-label">COLOR</div>
                        <div class="color-options">
                            <% 
                            // First filter variants with stock > 0
                            const inStockVariants = product.variants.filter(v => v.stock > 0);
                            
                            // Then get unique colors from in-stock variants
                            const availableColors = [...new Set(inStockVariants.map(v => v.color))];
                            
                            if (availableColors.length > 0) {
                                availableColors.forEach((color, index) => { 
                            %>
                                <div class="color-option <%= index === 0 ? 'selected' : '' %>" 
                                     style="background-color: <%= color %>"
                                     onclick="selectColor(this)">
                                    <input type="radio" name="color" value="<%= color %>" <%= index === 0 ? 'checked' : '' %> hidden>
                                </div>
                            <% 
                                });
                            } else { 
                            %>
                                <div class="alert alert-warning">No colors available in stock</div>
                            <% } %>
                        </div>
                    </div>

                    <div class="variant-block">
                        <div class="variant-label">SIZE</div>
                        <div class="size-options">
                            <% 
                            // Get sizes only for the selected color that have stock
                            const selectedColor = availableColors[0]; // Default to first color
                            const availableSizes = [...new Set(inStockVariants
                                .filter(v => v.color === selectedColor)
                                .map(v => v.size))];
                            
                            if (availableSizes.length > 0) {
                                availableSizes.forEach((size, index) => { 
                            %>
                                <div class="size-option <%= index === 0 ? 'selected' : '' %>"
                                     onclick="selectSize(this)">
                                    <input type="radio" name="size" value="<%= size %>" <%= index === 0 ? 'checked' : '' %> hidden>
                                    <%= size %>
                                </div>
                            <% 
                                });
                            } else { 
                            %>
                                <div class="alert alert-warning">No sizes available in stock</div>
                            <% } %>
                        </div>
                    </div>

                    <% if (inStockVariants.length > 0) { %>
                        <div class="quantity-row">
                            <input type="number" class="quantity-input" value="1" min="1" max="10">
                        </div>

                        <input type="hidden" name="productId" value="<%= product._id %>">
                        <input type="hidden" id="selected-variant" name="variantId" value="">
                        <input type="hidden" id="product-price" name="price" value="">

                        <button type="submit" class="add-cart-btn">Add to Cart</button>
                    <% } else { %>
                        <div class="alert alert-danger">This product is currently out of stock</div>
                    <% } %>
                </form>

                <div class="description">
                    <p><%= product.description %></p>
                        </div>
                    </div>
                </div>
            </div>

                                <script>
        // Store variants data
        const variants = <%- JSON.stringify(product.variants) %>;
        
        function updateSelectedVariant() {
            const selectedColor = document.querySelector('input[name="color"]:checked')?.value;
            const selectedSize = document.querySelector('input[name="size"]:checked')?.value;
            
            if (!selectedColor || !selectedSize) return;

            const variant = variants.find(v => 
                v.color === selectedColor && 
                v.size === selectedSize &&
                v.stock > 0
            );

            if (variant) {
                document.getElementById('selected-variant').value = variant._id;
                // Calculate discounted price
                const originalPrice = variant.price;
                const maxOffer = Math.max(<%= product.offer %>, <%= product.category.categoryOffer %>);
                const discountedPrice = (originalPrice * (1 - maxOffer / 100)).toFixed(2);
                document.getElementById('product-price').value = discountedPrice;
                
                // Update quantity input max value
                const quantityInput = document.querySelector('.quantity-input');
                quantityInput.max = variant.stock;
                quantityInput.value = Math.min(quantityInput.value, variant.stock);
                
                // Update stock info
                updateStockInfo(variant.stock);
            }
        }

        function updateStockInfo(stock) {
            const existingStockInfo = document.querySelector('.stock-info');
            if (existingStockInfo) {
                existingStockInfo.remove();
            }
            
            const stockInfo = document.createElement('div');
            stockInfo.className = 'stock-info text-muted mt-2';
            stockInfo.textContent = `Available Stock: ${stock}`;
            document.querySelector('.quantity-row').appendChild(stockInfo);
        }

        function changeImage(img) {
            document.getElementById('mainImage').src = img.src;
            document.querySelectorAll('.thumbnail').forEach(thumb => thumb.classList.remove('active'));
            img.classList.add('active');
            updateZoomImage();
        }

        function selectColor(element) {
            document.querySelectorAll('.color-option').forEach(opt => opt.classList.remove('selected'));
            element.classList.add('selected');
            element.querySelector('input').checked = true;
            
            // Update available sizes based on selected color
            const selectedColor = element.querySelector('input').value;
            const availableSizes = [...new Set(variants
                .filter(v => v.color === selectedColor && v.stock > 0)
                .map(v => v.size))];
            
            // Update size options
            const sizeOptionsContainer = document.querySelector('.size-options');
            sizeOptionsContainer.innerHTML = '';
            
            if (availableSizes.length > 0) {
                availableSizes.forEach((size, index) => {
                    const sizeDiv = document.createElement('div');
                    sizeDiv.className = `size-option ${index === 0 ? 'selected' : ''}`;
                    sizeDiv.onclick = function() { selectSize(this); };
                    sizeDiv.innerHTML = `
                        <input type="radio" name="size" value="${size}" ${index === 0 ? 'checked' : ''} hidden>
                        ${size}
                    `;
                    sizeOptionsContainer.appendChild(sizeDiv);
                });
            } else {
                sizeOptionsContainer.innerHTML = '<div class="alert alert-warning">No sizes available for this color</div>';
            }
            
            updateSelectedVariant();
        }

        function selectSize(element) {
            document.querySelectorAll('.size-option').forEach(opt => opt.classList.remove('selected'));
            element.classList.add('selected');
            element.querySelector('input').checked = true;
            updateSelectedVariant();
        }

        // Initialize on page load
        document.addEventListener('DOMContentLoaded', function() {
            const inStockVariants = variants.filter(v => v.stock > 0);
            if (inStockVariants.length === 0) {
                document.getElementById('add-to-cart-form').innerHTML = 
                    '<div class="alert alert-danger">This product is currently out of stock</div>';
            } else {
                updateSelectedVariant();
            }
        });

        document.addEventListener('DOMContentLoaded', function() {
            const container = document.querySelector('.image-zoom-container');
            const mainImage = document.getElementById('mainImage');
            const lens = document.querySelector('.zoom-lens');
            const result = document.querySelector('.zoom-result');

            // Calculate the ratio between result and lens
            function getCursorPos(e) {
                let bounds = mainImage.getBoundingClientRect();
                let x = e.pageX - bounds.left - window.scrollX;
                let y = e.pageY - bounds.top - window.scrollY;
                x = x - window.pageXOffset;
                y = y - window.pageYOffset;
                return {x, y};
            }

            function moveLens(e) {
                e.preventDefault();
                const pos = getCursorPos(e);
                let x = pos.x - (lens.offsetWidth / 2);
                let y = pos.y - (lens.offsetHeight / 2);

                // Prevent lens from moving outside the image
                if (x > mainImage.width - lens.offsetWidth) {x = mainImage.width - lens.offsetWidth;}
                if (x < 0) {x = 0;}
                if (y > mainImage.height - lens.offsetHeight) {y = mainImage.height - lens.offsetHeight;}
                if (y < 0) {y = 0;}

                // Set lens position
                lens.style.left = x + "px";
                lens.style.top = y + "px";

                // Calculate and set background position for result
                const cx = result.offsetWidth / lens.offsetWidth;
                const cy = result.offsetHeight / lens.offsetHeight;
                result.style.backgroundImage = `url('${mainImage.src}')`;
                result.style.backgroundSize = (mainImage.width * cx) + "px " + (mainImage.height * cy) + "px";
                result.style.backgroundPosition = "-" + (x * cx) + "px -" + (y * cy) + "px";
            }

            // Event listeners
            mainImage.addEventListener('mousemove', moveLens);
            lens.addEventListener('mousemove', moveLens);

            // Show/hide zoom elements
            container.addEventListener('mouseenter', function() {
                if (window.innerWidth > 1200) { // Only show zoom on larger screens
                    lens.style.display = 'block';
                    result.style.display = 'block';
                }
            });

            container.addEventListener('mouseleave', function() {
                lens.style.display = 'none';
                result.style.display = 'none';
            });

            // Update zoom when changing images
            function updateZoomImage() {
                result.style.backgroundImage = `url('${mainImage.src}')`;
            }
        });

        // Add event listener to the form
        document.getElementById('add-to-cart-form').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const formData = new FormData(this);
            const quantity = document.querySelector('.quantity-input').value;
            formData.append('quantity', quantity);

            try {
                const response = await fetch('/cart/add', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(Object.fromEntries(formData))
                });

              
                if (response.headers.get('content-type')?.includes('text/html')) {
                window.location.href = '/shopping-cart';
                } else {
                    const data = await response.json();
                    console.log(data);
                }
            } catch (error) {
                console.error('Error:', error);
                alert('An error occurred while adding to cart');
            }
        });
        </script>

            <div class="container">
        <div class="related-products">
            <h2 class="section-title">Related Products</h2>
                <div class="row">
                <% relatedProducts.forEach(product => { %>
                    <div class="col-md-3 col-sm-6 mb-4">
                            <div class="product-card">
                            <a href="/productDetails?id=<%= product._id %>" class="product-link">
                                <div class="product-image">
                                    <img src="<%= product.image1 %>" alt="<%= product.productName %>" class="img-fluid">
                                    </div>
                                <div class="product-info">
                                    <h3 class="product-name"><%= product.productName %></h3>
                                    <div class="product-price">
                                        <span class="current-price">₹<%= (product.variants[0].price * (1 - (product.offer/100))).toFixed(2) %></span>
                                        <% if (product.offer > 0) { %>
                                            <span class="original-price">₹<%= product.variants[0].price %></span>
                                        <% } %>
                                    </div>
                                </div>
                            </a>
                            </div>
                        </div>
                        <% }); %>
                </div>
            </div>
                            </div>

    <%- include("../../views/partials/user/footer") %>
        </body>
    </html>
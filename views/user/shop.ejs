<%- include("../../views/partials/user/header") %>
  <style>
    .main-container {
      max-width: 1200px;
      margin: auto;
      padding: 20px;
      border: 0px;
    }

    .shop-topbar {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 20px;
    }

    .search-form {
      display: flex;
      align-items: center;
      background-color: #f1f1f1;
      border-radius: 25px;
      overflow: hidden;
      max-width: 250px;
      box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
    }

    .search-input {
      flex: 1;
      padding: 8px 10px;
      font-size: 14px;
      border: none;
      outline: none;
      background-color: transparent;
    }

    .search-button {
      padding: 8px 15px;
      background-color: #000000;
      color: #fff;
      border: none;
      cursor: pointer;
      font-size: 14px;
      border-radius: 15px;
      margin-right: 5px;
      transition: background-color 0.3s, transform 0.2s;
    }

    .search-button:hover {
      background-color: #0056b3;
      transform: scale(1.05);
    }

    /* Sidebar Styles */
    .sidebar {
      width: 250px;
      background: #fff;
      padding: 20px;
      border-radius: 12px;
      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
      font-family: 'Poppins', sans-serif;
    }

    /* Title Styles */
    .filter-title {
      font-size: 18px;
      font-weight: bold;
      color: #333;
      margin-bottom: 10px;
      padding: 8px 0;
      border-bottom: 2px solid #f0f0f0;
    }

    /* Category & Price Buttons */
    .category-options,
    .price-options {
      display: flex;
      flex-direction: column;
      gap: 10px;
    }

    .category-button,
    .price-button {
      background: linear-gradient(135deg, #f8f5f6, #ffffff);
      color: #0b0808;
      border: none;
      padding: 10px 14px;
      border-radius: 25px;
      font-size: 14px;
      font-weight: 600;
      cursor: pointer;
      transition: all 0.3s ease;
      box-shadow: 0 4px 8px rgba(101, 96, 236, 0.3);
    }


    .category-button:hover,
    .price-button:hover {
      background: linear-gradient(135deg, #f0eeee, #f6f1f2);
      transform: translateY(-2px);
    }

    /* Responsive Design */
    @media (max-width: 768px) {
      .sidebar {
        width: 100%;
        padding: 15px;
      }
    }

    .filter-section {
      margin-bottom: 20px;
    }

    .filter-title {
      font-weight: bold;
      margin-bottom: 10px;
      font-size: 16px;
      color: #333;
    }

    .filter-item {
      margin: 5px 0;
    }

    .filter-item a {
      text-decoration: none;
      color: #f4f4f4;
    }

    .filter-item a:hover {
      color: #007bff;
    }

    .product-list-container {
      display: flex;
      gap: 20px;
    }

    .product-grid {
      display: flex;
      flex-wrap: wrap;
      gap: 20px;
      width: calc(100% - 270px);
    }

    .product-card {
      width: calc(33.333% - 20px);

      padding: 15px;
      border-radius: 8px;
      text-align: center;
      position: relative;
    }

    .product-card img {
      max-width: 100%;
      height: auto;
      border-radius: 5px;
    }

    .wishlist-btn {
      position: absolute;
      top: 8px;
      right: 8px;
      background-color: rgba(237, 247, 247, 0.8);
      color: #fff;
      padding: 8px;
      border-radius: 50%;
      cursor: pointer;
    }

    .add-to-cart-btn {
      background-color: #46698f;
      color: #fff;
      padding: 10px;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      width: 100%;
      margin-top: 10px;
    }

    .pagination {
      display: flex;
      justify-content: center;
      gap: 10px;
      margin: 20px 0;
    }

    .pagination a {
      padding: 8px 12px;
      background-color: #f0f0f0;
      border: 1px solid #ddd;
      color: #333;
      text-decoration: none;
    }

    .pagination .active {
      background-color: #007bff;
      color: #fff;
    }

    .price-filter {
      padding: 10px;
      background-color: #f9f9f9;
      border-radius: 8px;
      margin-top: 20px;
    }

    .price-filter .price-options {
      display: flex;
      flex-direction: column;
      gap: 10px;
    }

    .price-button {
      padding: 12px 20px;
      background-color: #f1f1f1;
      color: #333;
      border: 1px solid #ddd;
      border-radius: 30px;
      cursor: pointer;
      transition: background-color 0.3s, transform 0.2s;
      text-align: center;
      font-size: 14px;
    }

    .price-button:hover {
      background-color: #007bff;
      color: white;
      transform: scale(1.05);
    }

    .price-button:active {
      transform: scale(0.95);
    }

    .category-brand-container {
      text-align: center;
    }

    /* hover effect */
    .product-card {
      transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .product-card:hover {
      transform: scale(1.05);
      box-shadow: 0 10px 20px rgba(0, 0, 0, 0.12);
    }

    .product__item__pic {
      transition: opacity 0.3s ease;
    }

    .product-card:hover .product__item__pic {
      opacity: 0.9;
    }

    .product__item__text {
      transition: background-color 0.3s ease;
    }

    .product-card:hover .product__item__text {
      background-color: rgba(245, 245, 245, 0.95);
    }

    .simple-cart-form {
      display: inline-block;
    }

    .wishlist-btn {
      position: absolute;
      top: 15px;
      right: 15px;
      border: none;
      background: none;
      /* Remove background */
      cursor: pointer;
      z-index: 2;
    }

    .wishlist-btn i {
      color: #2e2626;
      font-size: 20px;
      transition: color 0.3s ease, transform 0.2s ease;
    }

    .wishlist-btn:hover i {
      color: #ff4444;
      transform: scale(1.1);
    }

    .wishlist-btn.active i {
      color: #ff4444;
    }

    .wishlist-btn.active:hover i {
      color: #cc0000;
    }

    .simple-cart-form {
      display: inline-block;
    }

    .add-to-cart-btn {
      display: inline-flex;
      margin-left: 30px;
      align-items: center;
      gap: 8px;
      padding: 12px 24px;
      border: none;
      border-radius: 8px;
      background: linear-gradient(135deg, #030603 0%, #030b04 100%);
      color: white;
      font-weight: 600;
      font-size: 14px;
      cursor: pointer;
      transition: all 0.3s ease;
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
      position: relative;
      overflow: hidden;
    }

    .add-to-cart-btn:hover {
      transform: translateY(-2px);
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
      background: linear-gradient(135deg, #45a049 0%, #4CAF50 100%);
    }

    .add-to-cart-btn:active {
      transform: translateY(0);
      scale: 0.98;
    }

    .add-to-cart-btn i {
      font-size: 16px;
      transition: transform 0.2s ease;
    }

    .add-to-cart-btn:hover i {
      transform: rotate(90deg);
    }

    /* Pulse animation on click */
    @keyframes pulse {
      0% {
        box-shadow: 0 0 0 0 rgba(76, 175, 80, 0.4);
      }

      70% {
        box-shadow: 0 0 0 10px rgba(76, 175, 80, 0);
      }

      100% {
        box-shadow: 0 0 0 0 rgba(76, 175, 80, 0);
      }
    }

    .add-to-cart-btn:focus {
      outline: none;
      animation: pulse 1s;
      box-shadow: 0 0 0 4px rgba(76, 175, 80, 0.2);
    }

    /* Mobile responsiveness */
    @media (max-width: 480px) {
      .add-to-cart-btn {
        padding: 10px 20px;
        font-size: 13px;
      }

      .add-to-cart-btn i {
        font-size: 14px;
      }
    }
  </style>
  <div class="main-container">
    <section class="shop-page container">
      <div class="shop-topbar">
        <!-- ... (keep breadcrumb unchanged) ... -->
        <div class="search-bar">
          <input type="text" id="search-input" placeholder="Search items..." class="search-input"
            oninput="filterProducts()">
        </div>
        <div class="sort-options">
          <select id="sort-select" onchange="sortProducts()">
            <option value="priceLowHigh">Price: Low to High</option>
            <option value="priceHighLow">Price: High to Low</option>
            <option value="rating">Average Ratings</option>
            <option value="aToZ">A - Z</option>
            <option value="zToA">Z - A</option>
            <option value="newArrivals">New Arrivals</option>
          </select>
        </div>
      </div>
      <div class="row">
        <div class="col-lg-12">
          <div class="product__details__breadcrumb">
            <a href="/">Home</a>
            <span>Shop</span>
          </div>
        </div>
      </div>
      <div class="product-list-container">

        <aside class="sidebar">
          <!-- Category Filter -->
          <div class="category-filter">
            <div class="filter-title">Filter by Category</div>
            <div class="category-options">
              <% category.forEach(category=> { %>
                <button type="button" class="category-button" onclick="filterByCategory('<%= category._id %>')">
                  <%= category.name %>
                </button>
                <% }); %>
            </div>
          </div>

          <!-- Price Filter -->
          <div class="price-filter">
            <div class="filter-title">Filter by Price</div>
            <div class="price-options">
              <button type="button" class="price-button" onclick="filterByPrice(0, 500)">Under ₹500</button>
              <button type="button" class="price-button" onclick="filterByPrice(500, 1000)">₹500 - ₹1000</button>
              <button type="button" class="price-button" onclick="filterByPrice(1000, 1500)">₹1000 - ₹1500</button>
              <button type="button" class="price-button" onclick="filterByPrice(1500, 100000)">Above ₹1500</button>
            </div>
          </div>
        </aside>


        <main class="product-grid" id="product-grid">
          <% if (products && products.length> 0) { %>
            <% products.forEach(product=> { %>
              <div class="product-card" data-category="<%= product.category %>" data-price="<%= product.salePrice %>"
                data-rating="<%= product.rating %>" data-name="<%= product.productName.toLowerCase() %>"
                data-date="<%= product.createdAt %>">

                <div
                  class="wishlist-btn <%= user && user.wishlist && user.wishlist.includes(product._id.toString()) ? 'active' : '' %>"
                  onclick="toggleWishlist(this, '<%= product._id %>')">
                  <i
                    class="fa <%= user && user.wishlist && user.wishlist.includes(product._id.toString()) ? 'fa-heart' : 'fa-heart-o' %>"></i>
                </div>

                <div class="product__item" onclick="window.location.href='/productDetails?id=<%= product._id %>'">
                  <div class="product__item__pic set-bg" data-setbg="<%= product.image1 || 'default-image.jpg' %>">
                    <% if (product.label) { %>
                      <span class="label">
                        <%= product.label %>
                      </span>
                      <% } %>
                  </div>

                  <div class="product__item__text">
                    <h6>
                      <p onclick="window.location.href='/productDetails?id=<%=product._id %>'">
                        <%= product.productName %>
                      </p>
                    </h6>
                    <a href="shopping-cart" class="add-cart">
                      <form action="shopping-cart" method="POST" class="simple-cart-form">
                        <input type="hidden" name="productId" value="<%= product._id %>">
                        <input type="hidden" name="quantity" value="1"> <!-- Default quantity set to 1 -->
                      </form>
                    </a>
                    <div class="rating">
                      <% for (let i=0; i < 5; i++) { %>
                        <i class="fa <%= i < product.rating ? 'fa-star' : 'fa-star-o' %>"></i>
                        <% } %>
                    </div>
                    <p>
                      <% if (product.variants && product.variants[0]) { %>
                        Price: ₹<%= product.variants[0].price %>
                      <% } %>
                    </p>
                  </div>
                </div>
              </div>
              <% }); %>
                <% } else { %>
                  <p>No products found</p>
                  <% } %>
        </main>
      </div>

      <!-- ... (keep pagination unchanged) ... -->
    </section>
  </div>

  <script>
    // Filter products by search input
    function filterProducts() {
      const searchQuery = document.getElementById('search-input').value.toLowerCase();
      const products = document.querySelectorAll('.product-card');

      products.forEach(product => {
        const productName = product.dataset.name;
        product.style.display = productName.includes(searchQuery) ? 'block' : 'none';
      });
    }

    // Sort products based on selected option
    function sortProducts() {
      const sortValue = document.getElementById('sort-select').value;
      const productGrid = document.getElementById('product-grid');
      const products = Array.from(document.querySelectorAll('.product-card'));

      products.sort((a, b) => {
        switch (sortValue) {
          case 'priceLowHigh':
            return parseFloat(a.dataset.price) - parseFloat(b.dataset.price);
          case 'priceHighLow':
            return parseFloat(b.dataset.price) - parseFloat(a.dataset.price);
          case 'rating':
            return parseFloat(b.dataset.rating) - parseFloat(a.dataset.rating);
          case 'aToZ':
            return a.dataset.name.localeCompare(b.dataset.name);
          case 'zToA':
            return b.dataset.name.localeCompare(a.dataset.name);
          case 'newArrivals':
            return new Date(b.dataset.date) - new Date(a.dataset.date);
          default:
            return 0;
        }
      });

      productGrid.innerHTML = '';
      products.forEach(product => productGrid.appendChild(product));
    }

    // Filter products by price range
    function filterByPrice(min, max) {
      const products = document.querySelectorAll('.product-card');

      products.forEach(product => {
        const price = parseFloat(product.dataset.price);
        const showProduct = price >= min && price <= max;
        product.style.display = showProduct ? 'block' : 'none';
      });
    }
  </script>

  <script>
    function toggleWishlist(button, productId) {
      fetch('/addToWishlist', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ productId }),
        credentials: 'include'
      })
        .then(response => response.json())
        .then(data => {
          if (data.status) {
            const icon = button.querySelector('i');
            if (data.action === 'add') {
              icon.classList.remove('fa-heart-o');
              icon.classList.add('fa-heart');
              button.classList.add('active');
            } else {
              icon.classList.remove('fa-heart');
              icon.classList.add('fa-heart-o');
              button.classList.remove('active');
            }
          }
        })
        .catch(error => console.error('Error:', error));
    }
  </script>
  <script>
    function filterByCategory(categoryId) {
      const products = document.querySelectorAll('.product-card');

      products.forEach(product => {
        const productCategory = product.dataset.category;
        product.style.display = productCategory === categoryId || categoryId === 'all' ? 'block' : 'none';
      });
    }
  </script>

  <%- include("../../views/partials/user/footer") %>
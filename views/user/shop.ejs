<%- include("../../views/partials/user/header") %>
  <style>
    .main-container {
      max-width: 1200px;
      margin: auto;
      padding: 20px;
      border: 0px;
    }

    .shop-topbar {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 20px;
    }

    .search-form {
      display: flex;
      align-items: center;
      background-color: #f1f1f1;
      border-radius: 25px;
      overflow: hidden;
      max-width: 250px;
      box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
    }

    .search-input {
      flex: 1;
      padding: 8px 10px;
      font-size: 14px;
      border: none;
      outline: none;
      background-color: transparent;
    }

    .search-button {
      padding: 8px 15px;
      background-color: #000000;
      color: #fff;
      border: none;
      cursor: pointer;
      font-size: 14px;
      border-radius: 15px;
      margin-right: 5px;
      transition: background-color 0.3s, transform 0.2s;
    }

    .search-button:hover {
      background-color: #0056b3;
      transform: scale(1.05);
    }

    .sidebar {
      padding: 20px;
      border: 1px solid #ddd;
      background-color: #f9f9f9;
      border-radius: 8px;
      margin-bottom: 20px;
      width: 250px;
      text-align: center;
    }

    .filter-section {
      margin-bottom: 20px;
    }

    .filter-title {
      font-weight: bold;
      margin-bottom: 10px;
      font-size: 16px;
      color: #333;
    }

    .filter-item {
      margin: 5px 0;
    }

    .filter-item a {
      text-decoration: none;
      color: #333;
    }

    .filter-item a:hover {
      color: #007bff;
    }

    .product-list-container {
      display: flex;
      gap: 20px;
    }

    .product-grid {
      display: flex;
      flex-wrap: wrap;
      gap: 20px;
      width: calc(100% - 270px);
    }

    .product-card {
      width: calc(33.333% - 20px);
      
      padding: 15px;
      border-radius: 8px;
      text-align: center;
      position: relative;
    }

    .product-card img {
      max-width: 100%;
      height: auto;
      border-radius: 5px;
    }

    .wishlist-btn {
      position: absolute;
      top: 8px;
      right: 8px;
      background-color: rgba(237, 247, 247, 0.8);
      color: #fff;
      padding: 8px;
      border-radius: 50%;
      cursor: pointer;
    }

    .add-to-cart-btn {
      background-color: #46698f;
      color: #fff;
      padding: 10px;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      width: 100%;
      margin-top: 10px;
    }

    .pagination {
      display: flex;
      justify-content: center;
      gap: 10px;
      margin: 20px 0;
    }

    .pagination a {
      padding: 8px 12px;
      background-color: #f0f0f0;
      border: 1px solid #ddd;
      color: #333;
      text-decoration: none;
    }

    .pagination .active {
      background-color: #007bff;
      color: #fff;
    }

    .price-filter {
      padding: 10px;
      background-color: #f9f9f9;
      border-radius: 8px;
      margin-top: 20px;
    }

    .price-filter .price-options {
      display: flex;
      flex-direction: column;
      gap: 10px;
    }

    .price-button {
      padding: 12px 20px;
      background-color: #f1f1f1;
      color: #333;
      border: 1px solid #ddd;
      border-radius: 30px;
      cursor: pointer;
      transition: background-color 0.3s, transform 0.2s;
      text-align: center;
      font-size: 14px;
    }

    .price-button:hover {
      background-color: #007bff;
      color: white;
      transform: scale(1.05);
    }

    .price-button:active {
      transform: scale(0.95);
    }

    .category-brand-container {
      text-align: center;
    }

    /* hover effect */
    .product-card {
      transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .product-card:hover {
      transform: scale(1.05);
      box-shadow: 0 10px 20px rgba(0, 0, 0, 0.12);
    }

    .product__item__pic {
      transition: opacity 0.3s ease;
    }

    .product-card:hover .product__item__pic {
      opacity: 0.9;
    }

    .product__item__text {
      transition: background-color 0.3s ease;
    }

    .product-card:hover .product__item__text {
      background-color: rgba(245, 245, 245, 0.95);
    }
  </style>

  <div class="main-container">
    <section class="shop-page container">
      <div class="shop-topbar">
        <div class="row">
          <div class="col-lg-12">
            <div class="product__details__breadcrumb">
              <a href="/">Home</a>
              <span>Shop</span>
            </div>
          </div>
        </div>
        <div class="search-bar">
          <input type="text" name="query" placeholder="Search items..." class="search-input"
            oninput="filterProducts()" />
          <button type="submit" class="search-button">Search</button>
        </div>
        <div class="sort-options">
          <select id="sort-select" onchange="sortProducts()">
            <option value="popularity">Popularity</option>
            <option value="priceLowHigh">Price: Low to High</option>
            <option value="priceHighLow">Price: High to Low</option>
            <option value="rating">Average Ratings</option>
            <option value="featured">Featured</option>
            <option value="newArrivals">New Arrivals</option>
            <option value="aToZ">A - Z</option>
            <option value="zToA">Z - A</option>
          </select>
        </div>
      </div>

      <div class="product-list-container">
        <aside class="sidebar">
          <div class="filter-section">
            <div class="filter-title">Categories</div>
            <div class="category-brand-container">
              <ul>
                <% for (let i=0; i < category.length; i++) { %>
                  <li class="filter-item">
                    <a href="/filter?category=<%= category[i]._id %>">
                      <%= category[i].name %>
                    </a>
                  </li>
                  <% } %>
              </ul>
            </div>
          </div>

          <div class="price-filter">
            <div class="filter-title">Filter by Price</div>
            <form id="price-filter-form">
              <div class="price-options">
                <a href=""><button type="button" class="price-button">Under ₹500</button></a>
                <a href=""><button type="button" class="price-button">₹500 - ₹1000</button></a>
                <a href=""><button type="button" class="price-button">₹1000- ₹1500</button></a>
                <a href=""><button type="button" class="price-button">Above ₹1500</button></a>
              </div>
            </form>
          </div>
        </aside>

        <main class="product-grid">
          <% if (products && products.length> 0) { %>
            <% products.forEach(product=> { %>
              <div class="product-card">
                <div class="product__item" onclick="window.location.href='/productDetails?id=<%= product._id %>'">
                  <div class="product__item__pic set-bg" data-setbg="<%= product.image1 || 'default-image.jpg' %>">
                    <% if (product.label) { %>
                      <span class="label">
                        <%= product.label %>
                      </span>
                      <% } %>
                  </div>

                  <div class="product__item__text">
                    <h6>
                      <p onclick="window.location.href='/productDetails?id=<%=product._id %>'">
                        <%= product.productName %>
                      </p>
                    </h6>
                    <a href="#" class="add-cart">+ Add To Cart</a>
                    <div class="rating">
                      <% for (let i=0; i < 5; i++) { %>
                        <i class="fa <%= i < product.rating ? 'fa-star' : 'fa-star-o' %>"></i>
                        <% } %>
                    </div>
                    <p>
                      Price: ₹<%= product.salePrice ? product.salePrice.toLocaleString('en-IN') : 'N/A' %>
                    </p>
                  </div>
                </div>
              </div>
              <% }); %>
                <% } else { %>
                  <p>No products found</p>
                  <% } %>
        </main>
      </div>

      <div class="pagination"></div>
    </section>
  </div>
  <script>
    function filterProducts() {
      let searchQuery = document.querySelector('.search-input').value.toLowerCase();
      let productCards = document.querySelectorAll('.product-card');

      // Loop through each product card
      productCards.forEach(function (card) {
        let productName = card.querySelector('.product__item__text h6 p').innerText.toLowerCase();


        if (productName.includes(searchQuery)) {
          card.style.display = 'block';
        } else {
          card.style.display = 'none';
        }
      });
    }
  </script>

<script>
  document.getElementById('add-to-cart-form').addEventListener('submit', function(e) {
      e.preventDefault();

      const productId = document.querySelector('[name="productId"]').value;
      const quantity = document.getElementById('product-quantity').value;

      fetch('/add-to-cart', {
          method: 'POST',
          headers: {
              'Content-Type': 'application/json',
          },
          body: JSON.stringify({ productId, quantity }),
      })
      .then(response => response.json())
      .then(data => {
          if (data.success) {
              alert('Product added to cart');
              // Optionally redirect to cart page or update cart count
          } else {
              alert('Error adding product to cart');
          }
      })
      .catch(error => console.error('Error:', error));
  });
</script>
<script>
  function filterProducts() {
    let searchQuery = document.getElementById('search-input').value.toLowerCase();
    let productCards = document.querySelectorAll('.product-card');

    productCards.forEach(card => {
      let productName = card.dataset.name.toLowerCase();
      if (productName.includes(searchQuery)) {
        card.style.display = 'block';
      } else {
        card.style.display = 'none';
      }
    });
  }

  function sortProducts() {
    let sortValue = document.getElementById('sort-select').value;
    let productGrid = document.getElementById('product-grid');
    let products = Array.from(document.querySelectorAll('.product-card'));

    products.sort((a, b) => {
      let aValue, bValue;

      switch (sortValue) {
        case "popularity":
          aValue = parseInt(a.dataset.popularity);
          bValue = parseInt(b.dataset.popularity);
          return bValue - aValue;
        case "priceLowHigh":
          aValue = parseFloat(a.dataset.price);
          bValue = parseFloat(b.dataset.price);
          return aValue - bValue;
        case "priceHighLow":
          aValue = parseFloat(a.dataset.price);
          bValue = parseFloat(b.dataset.price);
          return bValue - aValue;
        case "rating":
          aValue = parseFloat(a.dataset.rating);
          bValue = parseFloat(b.dataset.rating);
          return bValue - aValue;
        case "newArrivals":
          aValue = new Date(a.dataset.date);
          bValue = new Date(b.dataset.date);
          return bValue - aValue;
        case "aToZ":
          return a.dataset.name.localeCompare(b.dataset.name);
        case "zToA":
          return b.dataset.name.localeCompare(a.dataset.name);
        default:
          return 0;
      }
    });

    productGrid.innerHTML = "";
    products.forEach(product => productGrid.appendChild(product));
  }
</script>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.0/jquery.min.js"></script>
  <%- include("../../views/partials/user/footer") %>
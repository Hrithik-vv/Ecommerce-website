<%- include("../../views/partials/user/header.ejs") %>

<style>
    .error-message {
        color: #dc3545;
        font-size: 0.875rem;
        margin-top: 0.25rem;
    }

    .is-invalid {
        border-color: #dc3545;
    }

    .success-message {
        color: #28a745;
        font-size: 0.875rem;
        margin-top: 0.25rem;
    }

    .password-requirements {
        font-size: 0.875rem;
        color: #6c757d;
        margin-top: 0.5rem;
    }

    .password-strength {
        height: 5px;
        margin-top: 0.5rem;
        border-radius: 3px;
        transition: all 0.3s ease;
    }

    .strength-weak { background-color: #dc3545; width: 25%; }
    .strength-medium { background-color: #ffc107; width: 50%; }
    .strength-strong { background-color: #28a745; width: 100%; }
</style>

<section class="content-main" style="margin-top: 80px; margin-bottom: 80px;">
    <div class="card mx-auto card-login col-4">
        <div class="card-body">
            <h4 class="card-title mb-4">Change Password</h4>
            
            <% if (typeof message !== 'undefined') { %>
                <div class="alert <%= message.includes('success') ? 'alert-success' : 'alert-danger' %>" role="alert">
                    <%= message %>
                </div>
            <% } %>

            <form method="post" action="/change-password" onsubmit="return validateForm()">
                <div class="mb-3">
                    <label for="currentPassword" class="form-label">Current Password</label>
                    <input type="password" 
                           class="form-control" 
                           id="currentPassword" 
                           name="currentPassword" 
                           required>
                    <div class="error-message" id="currentPassword-error"></div>
                </div>

                <div class="mb-3">
                    <label for="newPassword" class="form-label">New Password</label>
                    <input type="password" 
                           class="form-control" 
                           id="newPassword" 
                           name="newPassword" 
                           required>
                    <div class="error-message" id="newPassword-error"></div>
                    <div class="password-requirements">
                        Password must contain:
                        <ul>
                            <li>At least 8 characters</li>
                            <li>At least one uppercase letter</li>
                            <li>At least one lowercase letter</li>
                            <li>At least one number</li>
                            <li>At least one special character</li>
                        </ul>
                    </div>
                    <div class="password-strength" id="passwordStrength"></div>
                </div>

                <div class="mb-3">
                    <label for="confirmPassword" class="form-label">Confirm New Password</label>
                    <input type="password" 
                           class="form-control" 
                           id="confirmPassword" 
                           name="confirmPassword" 
                           required>
                    <div class="error-message" id="confirmPassword-error"></div>
                </div>

                <div class="mb-4">
                    <button type="submit" class="btn btn-primary w-100">Change Password</button>
                </div>
            </form>
        </div>
    </div>
</section>

<script>
    // Password strength checker
    function checkPasswordStrength(password) {
        let strength = 0;
        const strengthBar = document.getElementById('passwordStrength');
        
        // Length check
        if (password.length >= 8) strength++;
        
        // Contains letters
        if (/[a-zA-Z]/.test(password)) strength++;
        
        // Contains numbers
        if (/[0-9]/.test(password)) strength++;
        
        // Update strength bar
        strengthBar.className = 'password-strength';
        if (strength === 1) {
            strengthBar.classList.add('strength-weak');
        } else if (strength === 2) {
            strengthBar.classList.add('strength-medium');
        } else if (strength === 3) {
            strengthBar.classList.add('strength-strong');
        }
    }

    // Real-time validation
    document.getElementById('currentPassword').addEventListener('input', function() {
        const errorDiv = document.getElementById('currentPassword-error');
        if (this.value.length === 0) {
            errorDiv.textContent = 'Current password is required';
            this.classList.add('is-invalid');
        } else {
            errorDiv.textContent = '';
            this.classList.remove('is-invalid');
        }
    });

    document.getElementById('newPassword').addEventListener('input', function() {
        const value = this.value;
        const errorDiv = document.getElementById('newPassword-error');
        let error = '';

        if (value.length === 0) {
            error = 'New password is required';
        } else if (value.length < 8) {
            error = 'Password must be at least 8 characters long';
        } else if (!/[a-zA-Z]/.test(value) || !/[0-9]/.test(value)) {
            error = 'Password must contain both letters and numbers';
        }

        errorDiv.textContent = error;
        this.classList.toggle('is-invalid', error !== '');
        checkPasswordStrength(value);
    });

    document.getElementById('confirmPassword').addEventListener('input', function() {
        const newPassword = document.getElementById('newPassword').value;
        const errorDiv = document.getElementById('confirmPassword-error');
        
        if (this.value !== newPassword) {
            errorDiv.textContent = 'Passwords do not match';
            this.classList.add('is-invalid');
        } else {
            errorDiv.textContent = '';
            this.classList.remove('is-invalid');
        }
    });

    function validateForm() {
        const currentPassword = document.getElementById('currentPassword').value;
        const newPassword = document.getElementById('newPassword').value;
        const confirmPassword = document.getElementById('confirmPassword').value;
        
        let isValid = true;
        
        // Clear previous errors
        document.querySelectorAll('.error-message').forEach(el => el.textContent = '');
        document.querySelectorAll('.is-invalid').forEach(el => el.classList.remove('is-invalid'));
        
        // Current password validation
        if (!currentPassword) {
            document.getElementById('currentPassword-error').textContent = 'Current password is required';
            document.getElementById('currentPassword').classList.add('is-invalid');
            isValid = false;
        }
        
        // New password validation
        if (!newPassword) {
            document.getElementById('newPassword-error').textContent = 'New password is required';
            document.getElementById('newPassword').classList.add('is-invalid');
            isValid = false;
        } else if (newPassword.length < 8) {
            document.getElementById('newPassword-error').textContent = 'Password must be at least 8 characters long';
            document.getElementById('newPassword').classList.add('is-invalid');
            isValid = false;
        } else if (!/[a-zA-Z]/.test(newPassword) || !/[0-9]/.test(newPassword)) {
            document.getElementById('newPassword-error').textContent = 'Password must contain both letters and numbers';
            document.getElementById('newPassword').classList.add('is-invalid');
            isValid = false;
        }
        
        // Confirm password validation
        if (!confirmPassword) {
            document.getElementById('confirmPassword-error').textContent = 'Please confirm your password';
            document.getElementById('confirmPassword').classList.add('is-invalid');
            isValid = false;
        } else if (newPassword !== confirmPassword) {
            document.getElementById('confirmPassword-error').textContent = 'Passwords do not match';
            document.getElementById('confirmPassword').classList.add('is-invalid');
            isValid = false;
        }
        
        // Check if new password is same as current
        if (newPassword === currentPassword) {
            document.getElementById('newPassword-error').textContent = 'New password cannot be same as current password';
            document.getElementById('newPassword').classList.add('is-invalid');
            isValid = false;
        }
        
        return isValid;
    }
</script>

<%- include("../../views/partials/user/footer.ejs") %>